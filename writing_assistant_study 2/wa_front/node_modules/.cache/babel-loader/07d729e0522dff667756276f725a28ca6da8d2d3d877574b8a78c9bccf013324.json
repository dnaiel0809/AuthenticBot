{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/http\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\"\n        // password: '',\n      }\n    };\n  },\n\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: {\n            Pid: this.username,\n            condition: this.condition\n          }\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      // const urlParams = new URLSearchParams(window.location.search);\n      // const prolificPID = urlParams.get('PROLIFIC_PID');\n      console.log(\"ID: \", this.$route.PROLIFIC_PID);\n      console.log(\"ID: \", this.$hash.PROLIFIC_PID);\n      this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n    // login() {\n    //   // Handle login logic here\n    //   // console.log(this.form);\n    //   http.post('/login/',{\n    //     name: this.form.username,\n    //     pwd: this.form.password,\n    //   }).then(res => {\n    //     console.log('successfully login')\n    //     console.log(res)\n    //     sessionStorage.setItem('username', this.form.username)\n    //     this.messagePop('success', \"successfully login!!\")\n    //     this.jumpyTo(\"/writing_assistant\")\n    //   //  同时也可以在后端为 single_fileupload 创建一个文件夹\n    //   //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n    //   }).catch(e=>{\n    //     console.log(\"login\", e)\n    //     this.messagePop('error', \"login error, wrong username or password\")\n    //   })\n    // },\n\n    signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      http.post(\"/signup/\", {\n        name: this.form.username\n        // pwd: this.form.password,\n      }).then(res => {\n        console.log(\"successfully sign up\");\n        console.log(res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"successfully sign up\");\n          sessionStorage.setItem(\"username\", this.form.username);\n          this.condition = res.data.condition;\n          this.jumpyTo(\"/screening\");\n        } else {\n          this.messagePop(\"error\", \"please try another username\");\n        }\n      }).catch(e => {\n        console.log(\"sign up error\", e);\n        this.messagePop(\"error\", \"please try another username\");\n      });\n    }\n  },\n  beforeMount() {\n    this.fetchID();\n  }\n};","map":{"version":3,"names":["http","name","data","form","username","condition","methods","messagePop","type","message","$message","jumpyTo","url","$router","currentRoute","path","console","log","push","query","Pid","fetchID","$route","PROLIFIC_PID","$hash","signUp","post","then","res","success","sessionStorage","setItem","catch","e","beforeMount"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"box-card\">\n      <!-- <div slot=\"header\" class=\"clearfix\"> -->\n      <!--        <span>Login</span>-->\n      <!-- <img src=\"/imgs/ai4sg_logo.png\" alt=\"Logo\" class=\"logo\"> -->\n      <!-- </div> -->\n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Prolific ID\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"Password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item> -->\n        <div class=\"button\">\n          <el-button type=\"primary\" @click=\"signUp\">Login</el-button>\n        </div>\n        <!-- <el-button type=\"primary\" @click=\"signUp\">Sign Up</el-button> -->\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport http from \"@/http\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\",\n        // password: '',\n      },\n    };\n  },\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: { Pid: this.username, condition: this.condition },\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      // const urlParams = new URLSearchParams(window.location.search);\n      // const prolificPID = urlParams.get('PROLIFIC_PID');\n      console.log(\"ID: \", this.$route.PROLIFIC_PID);\n      console.log(\"ID: \", this.$hash.PROLIFIC_PID);\n      this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n    // login() {\n    //   // Handle login logic here\n    //   // console.log(this.form);\n    //   http.post('/login/',{\n    //     name: this.form.username,\n    //     pwd: this.form.password,\n    //   }).then(res => {\n    //     console.log('successfully login')\n    //     console.log(res)\n    //     sessionStorage.setItem('username', this.form.username)\n    //     this.messagePop('success', \"successfully login!!\")\n    //     this.jumpyTo(\"/writing_assistant\")\n    //   //  同时也可以在后端为 single_fileupload 创建一个文件夹\n    //   //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n    //   }).catch(e=>{\n    //     console.log(\"login\", e)\n    //     this.messagePop('error', \"login error, wrong username or password\")\n    //   })\n    // },\n\n    signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      http\n        .post(\"/signup/\", {\n          name: this.form.username,\n          // pwd: this.form.password,\n        })\n        .then((res) => {\n          console.log(\"successfully sign up\");\n          console.log(res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"successfully sign up\");\n            sessionStorage.setItem(\"username\", this.form.username);\n            this.condition = res.data.condition;\n            this.jumpyTo(\"/screening\");\n          } else {\n            this.messagePop(\"error\", \"please try another username\");\n          }\n        })\n        .catch((e) => {\n          console.log(\"sign up error\", e);\n          this.messagePop(\"error\", \"please try another username\");\n        });\n    },\n  },\n  beforeMount() {\n    this.fetchID();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.box-card {\n  width: 30%;\n}\n\n.logo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n}\n\n.button {\n  display: block;\n  margin-left: auto;\n  /* margin-right: auto; */\n  width: 20%;\n}\n</style>"],"mappings":";AAwBA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,SAAA;QACA;MACA;IACA;EACA;;EACAC,OAAA;IACAC,WAAAC,IAAA,EAAAC,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,KAAAA,OAAA;QACAD,IAAA,KAAAA,IAAA;MACA;IACA;IACAG,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA,KAAAH,GAAA;QACAI,OAAA,CAAAC,GAAA,MAAAb,QAAA;QACA,KAAAS,OAAA,CAAAK,IAAA;UACAH,IAAA,EAAAH,GAAA;UACAO,KAAA;YAAAC,GAAA,OAAAhB,QAAA;YAAAC,SAAA,OAAAA;UAAA;QACA;MACA;IACA;IACAgB,QAAA;MACA;MACA;MACA;MACAL,OAAA,CAAAC,GAAA,cAAAK,MAAA,CAAAC,YAAA;MACAP,OAAA,CAAAC,GAAA,cAAAO,KAAA,CAAAD,YAAA;MACA,KAAAH,GAAA,QAAAE,MAAA,CAAAH,KAAA,CAAAI,YAAA;MACA;;MAEA,KAAApB,IAAA,CAAAC,QAAA,QAAAgB,GAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEAK,OAAA;MACAT,OAAA,CAAAC,GAAA,MAAAd,IAAA;MACAa,OAAA,CAAAC,GAAA,MAAAd,IAAA,CAAAC,QAAA;MACA,KAAAA,QAAA,QAAAD,IAAA,CAAAC,QAAA;MACAJ,IAAA,CACA0B,IAAA;QACAzB,IAAA,OAAAE,IAAA,CAAAC;QACA;MACA,GACAuB,IAAA,CAAAC,GAAA;QACAZ,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAW,GAAA;QACA,IAAAA,GAAA,CAAA1B,IAAA,CAAA2B,OAAA;UACA,KAAAtB,UAAA;UACAuB,cAAA,CAAAC,OAAA,kBAAA5B,IAAA,CAAAC,QAAA;UACA,KAAAC,SAAA,GAAAuB,GAAA,CAAA1B,IAAA,CAAAG,SAAA;UACA,KAAAM,OAAA;QACA;UACA,KAAAJ,UAAA;QACA;MACA,GACAyB,KAAA,CAAAC,CAAA;QACAjB,OAAA,CAAAC,GAAA,kBAAAgB,CAAA;QACA,KAAA1B,UAAA;MACA;IACA;EACA;EACA2B,YAAA;IACA,KAAAb,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}