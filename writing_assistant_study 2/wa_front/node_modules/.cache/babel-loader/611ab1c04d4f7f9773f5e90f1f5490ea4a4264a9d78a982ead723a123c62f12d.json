{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport http from \"@/http\";\nimport VueGAPI from \"vue-gapi\";\n\n// import axios from \"axios\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\",\n        randomCondition: [\"1\", \"4\", \"5\"]\n        // password: '',\n      }\n    };\n  },\n\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: {\n            Pid: this.username,\n            condition: this.condition\n          }\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      this.Pid = urlParams.get(\"PROLIFIC_PID\");\n      console.log(\"ID: \", this.Pid);\n\n      // const [hash, query] = url.split('#')[1].split('?')\n      // const params = Object.fromEntries(new URLSearchParams(query))\n      // this.Pid = params.PROLIFIC_PID;\n      // this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n    async signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      this.shuffleArray(this.randomCondition);\n      this.condition = this.randomCondition[0];\n      // this.condition = this.form.condition;\n      // if (\n      //       this.condition == \"1\" ||\n      //       this.condition == \"2\" ||\n      //       this.condition == \"3\" ||\n      //       this.condition == \"4\" ||\n      //       this.condition == \"5\"\n      //     ) {\n\n      //     } else {\n      //       this.messagePop(\"error\", \"condition should be 1~5\");\n      //       return;\n      //     }\n      await http.post(\"/signup/\", {\n        name: this.form.username,\n        condition: this.condition\n        // pwd: this.form.password,\n      }).then(res => {\n        console.log(\"successfully sign up\");\n        console.log(res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"successfully sign up\");\n          sessionStorage.setItem(\"main_1\", res.data.order1);\n          sessionStorage.setItem(\"main_2\", res.data.order2);\n          sessionStorage.setItem(\"main_3\", res.data.order3);\n          sessionStorage.setItem(\"username\", this.form.username);\n\n          // this.condition = res.data.condition;\n\n          this.jumpyTo(\"/pre_survey\");\n        } else {\n          this.messagePop(\"error\", \"please try another username\");\n        }\n      }).catch(e => {\n        console.log(\"sign up error\", e);\n        this.messagePop(\"error\", \"please try another username\");\n      });\n    },\n    shuffleArray(array) {\n      console.log(array);\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]]; // Swap elements\n      }\n\n      return array;\n    }\n  },\n  beforeMount() {\n    this.fetchID();\n  }\n};","map":{"version":3,"names":["http","VueGAPI","name","data","form","username","condition","randomCondition","methods","messagePop","type","message","$message","jumpyTo","url","$router","currentRoute","path","console","log","push","query","Pid","fetchID","urlParams","URLSearchParams","window","location","search","get","signUp","shuffleArray","post","then","res","success","sessionStorage","setItem","order1","order2","order3","catch","e","array","i","length","j","Math","floor","random","beforeMount"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"box-card\">\n      <p>v21</p>\n      <!-- <div slot=\"header\" class=\"clearfix\"> -->\n      <!--        <span>Login</span>-->\n      <!-- <img src=\"/imgs/ai4sg_logo.png\" alt=\"Logo\" class=\"logo\"> -->\n      <!-- </div> -->\n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Prolific ID\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"condition\">\n          <el-input v-model=\"form.condition\"></el-input>\n        </el-form-item> -->\n        <!-- <el-form-item label=\"Password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item> -->\n        <div class=\"button\">\n          <el-button type=\"primary\" @click=\"signUp\">Login</el-button>\n        </div>\n        <!-- <el-button type=\"primary\" @click=\"signUp\">Sign Up</el-button> -->\n      </el-form>\n    </el-card>\n  </div>\n</template>\n<script src=\"https://apis.google.com/js/platform.js?onload=onLoadCallback\"></script>\n\n<script>\nimport http from \"@/http\";\nimport VueGAPI from \"vue-gapi\";\n\n// import axios from \"axios\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\",\n        randomCondition: [\"1\", \"4\", \"5\"],\n        // password: '',\n      },\n    };\n  },\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: { Pid: this.username, condition: this.condition },\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      this.Pid = urlParams.get(\"PROLIFIC_PID\");\n      console.log(\"ID: \", this.Pid);\n\n      // const [hash, query] = url.split('#')[1].split('?')\n      // const params = Object.fromEntries(new URLSearchParams(query))\n      // this.Pid = params.PROLIFIC_PID;\n      // this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n\n    async signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      this.shuffleArray(this.randomCondition);\n      this.condition = this.randomCondition[0];\n      // this.condition = this.form.condition;\n      // if (\n      //       this.condition == \"1\" ||\n      //       this.condition == \"2\" ||\n      //       this.condition == \"3\" ||\n      //       this.condition == \"4\" ||\n      //       this.condition == \"5\"\n      //     ) {\n\n      //     } else {\n      //       this.messagePop(\"error\", \"condition should be 1~5\");\n      //       return;\n      //     }\n      await http\n        .post(\"/signup/\", {\n          name: this.form.username,\n          condition: this.condition,\n          // pwd: this.form.password,\n        })\n        .then((res) => {\n          console.log(\"successfully sign up\");\n          console.log(res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"successfully sign up\");\n            sessionStorage.setItem(\"main_1\", res.data.order1);\n            sessionStorage.setItem(\"main_2\", res.data.order2);\n            sessionStorage.setItem(\"main_3\", res.data.order3);\n            sessionStorage.setItem(\"username\", this.form.username);\n\n            // this.condition = res.data.condition;\n\n            this.jumpyTo(\"/pre_survey\");\n          } else {\n            this.messagePop(\"error\", \"please try another username\");\n          }\n        })\n        .catch((e) => {\n          console.log(\"sign up error\", e);\n          this.messagePop(\"error\", \"please try another username\");\n        });\n    },\n    shuffleArray(array) {\n      console.log(array)\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]]; // Swap elements\n      }\n      return array;\n    },\n  },\n\n  beforeMount() {\n    this.fetchID();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.box-card {\n  width: 30%;\n}\n\n.logo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n}\n\n.button {\n  display: block;\n  margin-left: auto;\n  /* margin-right: auto; */\n  width: 20%;\n}\n</style>"],"mappings":";;;;AA6BA,OAAAA,IAAA;AACA,OAAAC,OAAA;;AAEA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,SAAA;QACAC,eAAA;QACA;MACA;IACA;EACA;;EACAC,OAAA;IACAC,WAAAC,IAAA,EAAAC,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,KAAAA,OAAA;QACAD,IAAA,KAAAA,IAAA;MACA;IACA;IACAG,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA,KAAAH,GAAA;QACAI,OAAA,CAAAC,GAAA,MAAAd,QAAA;QACA,KAAAU,OAAA,CAAAK,IAAA;UACAH,IAAA,EAAAH,GAAA;UACAO,KAAA;YAAAC,GAAA,OAAAjB,QAAA;YAAAC,SAAA,OAAAA;UAAA;QACA;MACA;IACA;IACAiB,QAAA;MACA;MACA,MAAAC,SAAA,OAAAC,eAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA,KAAAN,GAAA,GAAAE,SAAA,CAAAK,GAAA;MACAX,OAAA,CAAAC,GAAA,cAAAG,GAAA;;MAEA;MACA;MACA;MACA;MACA;;MAEA,KAAAlB,IAAA,CAAAC,QAAA,QAAAiB,GAAA;IACA;IAEA,MAAAQ,OAAA;MACAZ,OAAA,CAAAC,GAAA,MAAAf,IAAA;MACAc,OAAA,CAAAC,GAAA,MAAAf,IAAA,CAAAC,QAAA;MACA,KAAAA,QAAA,QAAAD,IAAA,CAAAC,QAAA;MACA,KAAA0B,YAAA,MAAAxB,eAAA;MACA,KAAAD,SAAA,QAAAC,eAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA,MAAAP,IAAA,CACAgC,IAAA;QACA9B,IAAA,OAAAE,IAAA,CAAAC,QAAA;QACAC,SAAA,OAAAA;QACA;MACA,GACA2B,IAAA,CAAAC,GAAA;QACAhB,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAe,GAAA;QACA,IAAAA,GAAA,CAAA/B,IAAA,CAAAgC,OAAA;UACA,KAAA1B,UAAA;UACA2B,cAAA,CAAAC,OAAA,WAAAH,GAAA,CAAA/B,IAAA,CAAAmC,MAAA;UACAF,cAAA,CAAAC,OAAA,WAAAH,GAAA,CAAA/B,IAAA,CAAAoC,MAAA;UACAH,cAAA,CAAAC,OAAA,WAAAH,GAAA,CAAA/B,IAAA,CAAAqC,MAAA;UACAJ,cAAA,CAAAC,OAAA,kBAAAjC,IAAA,CAAAC,QAAA;;UAEA;;UAEA,KAAAQ,OAAA;QACA;UACA,KAAAJ,UAAA;QACA;MACA,GACAgC,KAAA,CAAAC,CAAA;QACAxB,OAAA,CAAAC,GAAA,kBAAAuB,CAAA;QACA,KAAAjC,UAAA;MACA;IACA;IACAsB,aAAAY,KAAA;MACAzB,OAAA,CAAAC,GAAA,CAAAwB,KAAA;MACA,SAAAC,CAAA,GAAAD,KAAA,CAAAE,MAAA,MAAAD,CAAA,MAAAA,CAAA;QACA,MAAAE,CAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,MAAAL,CAAA;QACA,CAAAD,KAAA,CAAAC,CAAA,GAAAD,KAAA,CAAAG,CAAA,MAAAH,KAAA,CAAAG,CAAA,GAAAH,KAAA,CAAAC,CAAA;MACA;;MACA,OAAAD,KAAA;IACA;EACA;EAEAO,YAAA;IACA,KAAA3B,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}