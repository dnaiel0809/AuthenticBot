{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\nexport default {\n  name: \"WritingAssitant\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider\n  },\n  mounted() {\n    fetch(\"/prompt.json\").then(response => response.json()).then(data => {\n      this.prompts = data.prompts;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.enableEditMode();\n    this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      selectContent: \"\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownOutputEditor: null,\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"clearness\",\n      style2: \"formal\",\n      style3: \"positive\",\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"]\n    };\n  },\n  methods: {\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    enableEditMode() {\n      // this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http.post(\"/delete_prompt/\", {\n        content: content,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"delete successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.selectContent = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\"\n      });\n    },\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n    editCurPrompt() {\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        output.textContent = this.selectContent;\n      });\n    },\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n    async saveMyPrompt() {\n      http.post(\"/save_prompt/\", {\n        content: this.selectContent,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"save prompt res\", res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"save prompt changes successfully!\");\n          console.log(\"save successfully\");\n        } else {\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        }\n      }).catch(e => {\n        console.log(e);\n        this.messagePop(\"error\", \"fail to save prompt changes\");\n      });\n    },\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http.post(\"/get_prompt/\", {\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"get successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getWrtingAssistantHelp() {\n      this.loading = true;\n      let prompt = `[Paragraph]\\n\n                    ${this.inputText}\\n\n                    [TASK]\\n\n                    ${this.selectContent}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post(\"/writing_assistant/\", {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.outputText = res.data.content;\n        this.markdownOutputEditor.value(this.outputText);\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    refreshDrawer() {\n      this.drawer = true;\n    }\n  }\n};","map":{"version":3,"names":["http","VueMarkdown","EasyMDE","VueSimpleRangeSlider","Vue","BootstrapVue","IconsPlugin","use","name","components","mounted","fetch","then","response","json","data","prompts","catch","error","console","log","enableEditMode","enableOutputEditMode","testData","edit","p_edit","sliderBool","markdownContent","my_prompts","drawer","my_drawer","direction","selectContent","beforeEdit","inputText","outputText","models","selectedItem","editMode","m_outputText","markdownEditor","markdownOutputEditor","loading","value1","value2","value3","style1","style2","style3","currentTab","tabs","methods","jumpyTo","url","$router","currentRoute","path","push","messagePop","type","message","$message","vm","$nextTick","element","$refs","codemirrorScroll","document","getElementsByClassName","style","maxHeight","overflowY","codemirror","on","value","markdown","markdownEditorOutput","setOption","copyText","$set","confirmDelete","content","post","person","sessionStorage","getItem","res","e","savePromptChange","getElementById","textContent","contentEditable","saveMyPrompt","showSlider","startEdit","output","saveChange","selectItem","selectContent_","editCurPrompt","cancelPromptChange","mySelectContent_","success","getMyPrompt","getWrtingAssistantHelp","prompt","model","refreshDrawer"],"sources":["src/components/WritingAssitant.vue"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n\n<template>\n  <div class=\"container\">\n    <div style=\"display: flex\">\n      <!-- 选择原生的 prompt 部分  -->\n      <!--      <el-button @click=\"drawer = true\" type=\"primary\" style=\"margin-top: 4em; margin-left: 5em;\"-->\n      <!--                 v-if=\"!selectContent\">-->\n      <el-button\n        @click=\"drawer = true\"\n        type=\"primary\"\n        style=\"margin-top: 4em; margin-left: 5em; margin-right: 1em\"\n      >\n        <!--        Select Prompts-->\n        System Prompts\n      </el-button>\n\n      <!--      <div v-else style=\" display: flex\">-->\n      <div v-if=\"selectContent\" style=\"display: flex\">\n        <!-- 选择完毕之后出现可编辑的框 -->\n        <div\n          v-if=\"!p_edit\"\n          style=\"\n            width: 500px;\n            padding-left: 2em;\n            padding-top: 2em;\n            padding-right: 2em;\n            border: 3px solid lightskyblue;\n          \"\n        >\n          {{ selectContent }}\n        </div>\n        <div\n          v-else\n          id=\"editPromptBox\"\n          v-html=\"selectContent\"\n          style=\"\n            width: 500px;\n            padding-left: 2em;\n            padding-top: 2em;\n            padding-right: 2em;\n          \"\n          :contenteditable=\"p_edit\"\n        ></div>\n\n        <!--点击 \"编辑\"， 或者 \"确定\"来完成编辑-->\n        <el-button\n          @click=\"editCurPrompt\"\n          type=\"primary\"\n          class=\"button\"\n          style=\"width: 14%; height: 40px; margin-top: 4em; margin-left: 1em\"\n          >edit Prompt</el-button\n        >\n        <el-button\n          @click=\"cancelPromptChange\"\n          type=\"primary\"\n          class=\"button\"\n          style=\"width: 14%; height: 40px; margin-top: 4em\"\n          :disabled=\"!p_edit\"\n          >cancel Edit</el-button\n        >\n        <el-button\n          @click=\"savePromptChange\"\n          type=\"primary\"\n          class=\"button\"\n          style=\"width: 14%; height: 40px; margin-top: 4em; margin-right: 1em\"\n          :disabled=\"!p_edit\"\n          >confirm Edit</el-button\n        >\n      </div>\n\n      <!-- 获得全部我自己的 prompt 记录-->\n      <el-button\n        type=\"primary\"\n        class=\"button\"\n        @click=\"getMyPrompt\"\n        style=\"width: 12%; height: 40px; margin-top: 4em; margin-right: 4em\"\n      >\n        <i class=\"el-icon-user-solid\"></i>\n        My Prompts</el-button\n      >\n      <el-button\n        @click=\"showSlider\"\n        type=\"primary\"\n        class=\"button\"\n        style=\"width: 14%; height: 40px; margin-top: 4em; margin-right: 1em\"\n        >show</el-button\n      >\n    </div>\n\n    <el-button-group class=\"header\">\n      <el-dropdown v-model=\"selectedItem\">\n        <el-button type=\"primary\">\n          {{ selectedItem }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </el-button>\n        <el-dropdown-menu slot=\"dropdown\">\n          <el-dropdown-item\n            v-for=\"(item, index) in models\"\n            :key=\"index\"\n            @click.native=\"selectItem(item)\"\n          >\n            {{ item }}\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </el-dropdown>\n\n      <el-button\n        @click=\"getWrtingAssistantHelp\"\n        type=\"primary\"\n        style=\"margin-left: 16px; margin-right: 50%\"\n        >submit</el-button\n      >\n\n      <!--        <el-button type=\"primary\"  class=\"button\" @click=\"startEdit\">edit Output</el-button>-->\n      <!--        <el-button type=\"primary\"  class=\"button\" @click=\"saveChange\">confirm Edit</el-button>-->\n      <!--        <el-button @click=\"copyText\" type=\"primary\">Copy Output</el-button>-->\n      <!--        <el-button type=\"primary\"  class=\"button\" @click=\"refreshDrawer\">重选</el-button>-->\n\n      <el-drawer\n        title=\"Select Proper Prompt\"\n        :visible.sync=\"drawer\"\n        :direction=\"direction\"\n        :size=\"'100%'\"\n      >\n        <el-menu>\n          <el-menu-item\n            v-for=\"(item, index) in prompts\"\n            :key=\"index\"\n            @click.native=\"selectContent_(item.content)\"\n            class=\"drop-item\"\n          >\n            <!--                {{item.content}}-->\n            <el-input\n              type=\"textarea\"\n              :autosize=\"{ minRows: 3, maxRows: 4 }\"\n              :placeholder=\"item.content\"\n              style=\"width: 95%\"\n            >\n            </el-input>\n          </el-menu-item>\n        </el-menu>\n      </el-drawer>\n\n      <el-drawer\n        title=\"Select Your Prompt\"\n        :visible.sync=\"my_drawer\"\n        :direction=\"direction\"\n        :size=\"'90%'\"\n      >\n        <el-menu>\n          <el-menu-item\n            v-for=\"(item, index) in my_prompts\"\n            :key=\"index\"\n            @click.native=\"mySelectContent_(item.content)\"\n            class=\"drop-item\"\n          >\n            <el-input\n              type=\"textarea\"\n              :autosize=\"{ minRows: 3, maxRows: 4 }\"\n              :placeholder=\"item.content\"\n              style=\"width: 95%\"\n            >\n            </el-input>\n            <el-popconfirm\n              title=\"这是一段内容确定删除吗？\"\n              @confirm=\"confirmDelete(item.content)\"\n            >\n              <i\n                slot=\"reference\"\n                class=\"el-icon-close\"\n                style=\"padding-top: 1em\"\n                @click.stop\n              >\n              </i>\n            </el-popconfirm>\n          </el-menu-item>\n        </el-menu>\n      </el-drawer>\n    </el-button-group>\n\n    <div class=\"translate-container\">\n      <el-row :gutter=\"0\">\n        <!--output 部分-->\n        <div class=\"grid-content-post bg-light\" v-loading=\"loading\">\n          <div\n            class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n            data-animation-name=\"\"\n            data-animation-duration=\"0\"\n            data-animation-direction=\"\"\n          >\n            <h3 style=\"text-align: left\">\n              <span style=\"font-size: 2.5rem\"\n                >I’ve wasted so much time being depressed, that I’m depressed\n                about wasting time.<br />\n              </span>\n            </h3>\n            <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n              I can’t imagine how many days I have wasted to being sad and\n              crying and not being able to accomplish the things I need to do. I\n              have responsibilities I have deadlines and none of them seem to\n              matter when I am in these dark episodes. How can you force\n              yourself to do what needs to be done when you feel so hopeless and\n              numb?\n            </p>\n            <p><br /><br /><br /></p>\n          </div>\n        </div>\n      </el-row>\n    </div>\n\n    <!-- 核心部件-->\n    <div class=\"translate-container\">\n      <el-row :gutter=\"20\">\n        <!--input 部分-->\n        <el-col :span=\"12\">\n          <div class=\"grid-content bg-light\">\n            <label\n              style=\"\n                font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n                font-size: large;\n              \"\n              >Input</label\n            >\n            <p style=\"font-size: small; color: grey\">\n              Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.\n            </p>\n            <textarea\n              id=\"inputArea\"\n              ref=\"markdownEditor\"\n              class=\"textarea\"\n            ></textarea>\n          </div>\n        </el-col>\n\n        <!--output 部分-->\n        <el-col :span=\"12\">\n          <div class=\"grid-content bg-light\" v-loading=\"loading\">\n            <div class=\"label_container\" style=\"display: flex\">\n              <label\n                style=\"\n                  font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n                  font-size: large;\n                \"\n                >Output</label\n              >\n              <el-button\n                @click=\"copyText\"\n                type=\"primary\"\n                style=\"margin-left: 30%; margin-bottom: 2em\"\n                >Copy Output</el-button\n              >\n            </div>\n            <textarea\n              id=\"outputArea\"\n              ref=\"markdownEditorOutput\"\n              class=\"textarea\"\n            ></textarea>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <div class=\"slider-content\" v-if=\"sliderBool\">\n      <v-col>\n        <v-row align=\"center\">\n          <p v-text=\"style1\" style=\"font-size: 1.5rem\"></p>\n        </v-row>\n        <b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">High</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value1\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">Low</p></b-col>\n        </b-row>\n        <v-row align=\"center\">\n          <p v-text=\"style2\" style=\"font-size: 1.5rem\"></p>\n        </v-row>\n        <b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">High</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value2\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">Low</p></b-col>\n        </b-row>\n        <v-row align=\"center\">\n          <p v-text=\"style3\" style=\"font-size: 1.5rem\"></p>\n        </v-row>\n        <b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">High</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value3\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">Low</p></b-col>\n        </b-row>\n      </v-col>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\n\nexport default {\n  name: \"WritingAssitant\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider,\n  },\n\n  mounted() {\n    fetch(\"/prompt.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.prompts = data.prompts;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    this.enableEditMode();\n    this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      selectContent: \"\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n\n      markdownOutputEditor: null,\n\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"clearness\",\n      style2: \"formal\",\n      style3: \"positive\",\n\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"],\n    };\n  },\n\n  methods: {\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n\n    enableEditMode() {\n      // this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput,\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http\n        .post(\"/delete_prompt/\", {\n          content: content,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"delete successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.selectContent = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\",\n      });\n    },\n\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n\n    editCurPrompt() {\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        output.textContent = this.selectContent;\n      });\n    },\n\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n\n    async saveMyPrompt() {\n      http\n        .post(\"/save_prompt/\", {\n          content: this.selectContent,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"save prompt res\", res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"save prompt changes successfully!\");\n            console.log(\"save successfully\");\n          } else {\n            this.messagePop(\"error\", \"fail to save prompt changes\");\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        });\n    },\n\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http\n        .post(\"/get_prompt/\", {\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"get successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getWrtingAssistantHelp() {\n      this.loading = true;\n      let prompt = `[Paragraph]\\n\n                    ${this.inputText}\\n\n                    [TASK]\\n\n                    ${this.selectContent}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http\n        .post(\"/writing_assistant/\", {\n          prompt: prompt,\n          model: this.selectedItem,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.outputText = res.data.content;\n          this.markdownOutputEditor.value(this.outputText);\n          console.log(\"output Text:\", res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    refreshDrawer() {\n      this.drawer = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  background: white;\n  width: 90%;\n  height: 2200px;\n  margin: auto;\n}\n.header {\n  margin-left: 4em;\n  /*margin-top: 4em;*/\n  padding-top: 4em;\n  display: flex;\n}\n\n.button {\n  /*width: 100px;*/\n  width: 10%;\n}\n\n.drop-item {\n  /*width: 500px;*/\n  font-family: ColfaxAI, helvetica, sans-serif;\n  font-size: small;\n  /*white-space: normal;*/\n  /*word-wrap: break-word;*/\n}\n\n.translate-container {\n  padding: 20px;\n}\n\n.grid-content {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.slider-content {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n  padding-right: 4em;\n}\n\n.bg-light {\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.textarea {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 550px;\n\n  /*font-family: 'Arial', sans-serif; !* 这将更改字体 *!*/\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px; /* 这将更改字体大小 */\n  color: #333; /* 这将更改文本颜色 */\n  line-height: 1.5; /* 这将更改行高 */\n  letter-spacing: 0.05em; /* 这将更改字符间距 */\n  text-align: justify; /* 这将使文本两端对齐 */\n  overflow-y: scroll;\n}\n\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n.el-menu-item i {\n  float: right;\n  margin-top: 5px;\n  cursor: pointer;\n}\n\n.example {\n  background: #ffffff;\n  margin: 20px;\n  border-color: #e7e7e7;\n  padding: 40px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}