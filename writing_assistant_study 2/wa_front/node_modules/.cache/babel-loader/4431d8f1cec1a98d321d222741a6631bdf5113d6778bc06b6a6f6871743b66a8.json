{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\nexport default {\n  name: \"ExperientialInput\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider\n  },\n  mounted() {\n    fetch(\"/prompt.json\").then(response => response.json()).then(data => {\n      this.prompts = data.prompts;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.enableEditMode();\n    this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      generateBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      stylePrompt: 'Given two paragraphs, please summary the writer\\'s language style of message and give three adjective words or a phrase.\\\n        Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n        {\\n\\\n        \"Summary\": \"[Summary]\",\\n\\\n        \"Style1\": \"[Style1]\",\\n\\\n        \"Style2\": \"[Style2]\",\\n\\\n        \"Style3\": \"[Style3]\"\\n\\\n        }',\n      regenerationPrompt: \"Adjust the style of the providing paragraph according to three values of the styles.\\\n        The higher value, the stronger the style effect is. 100 is the max value, and 0 is the minimum value. 50 is neutral.\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownEditor2: null,\n      markdownOutputEditor: null,\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"\",\n      style2: \"\",\n      style3: \"\",\n      last_value1: 50,\n      last_value2: 50,\n      last_value3: 50,\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"]\n    };\n  },\n  methods: {\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n\n        if (!this.markdownEditor2) {\n          this.markdownEditor2 = new EasyMDE({\n            element: this.$refs.markdownEditor2\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor2.codemirror.on(\"change\", () => {\n            vm.inputText2 = vm.markdownEditor2.value();\n            console.log(vm.inputText2); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http.post(\"/delete_prompt/\", {\n        content: content,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"delete successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.stylePrompt = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\"\n      });\n    },\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n    toAttitudinal() {\n      this.jumpyTo(\"/attitude_input\");\n    },\n    toExperiential() {\n      this.jumpyTo(\"/experiential_input\");\n    },\n    toStyleLearning() {\n      this.jumpyTo(\"/writing_assistant\");\n    },\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n    async saveMyPrompt() {\n      http.post(\"/save_prompt/\", {\n        content: this.selectContent,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"save prompt res\", res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"save prompt changes successfully!\");\n          console.log(\"save successfully\");\n        } else {\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        }\n      }).catch(e => {\n        console.log(e);\n        this.messagePop(\"error\", \"fail to save prompt changes\");\n      });\n    },\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http.post(\"/get_prompt/\", {\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"get successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getWrtingAssistantHelp() {\n      this.sliderBool = true;\n      this.loading = true;\n      // let prompt = `[Paragraph]\\n\n      //               ${this.inputText}\\n\n      //               [TASK]\\n\n      //               ${this.selectContent}\\n\n      //               [RESULT]\\n\\n`;\n      let prompt = `[Paragraph1]\\n\n                    ${this.inputText}\\n\n                    [Paragraph2]\\n\n                    ${this.inputText2}\\n\n                    [TASK]\\n\n                    ${this.stylePrompt}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post(\"/writing_assistant/\", {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.outputText = res.data.content.Summary;\n        this.style1 = res.data.content.Style1;\n        this.style2 = res.data.content.Style2;\n        this.style3 = res.data.content.Style3;\n        // this.markdownOutputEditor.value(this.outputText);\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getWrtingAssistantMimic() {\n      this.generateBool = true;\n      this.loading = true;\n      let prompt = `[Paragraph1]\\n\n                    ${this.inputText}\\n\n                    [Paragraph2]\\n\n                    ${this.inputText2}\\n\n                    [TASK]\\n\n                    ${this.mimicPrompt}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post(\"/writing_mimic/\", {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.markdownOutputEditor.value(res.data.content);\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getRegenerateMimic() {\n      this.generateBool = true;\n      this.loading = true;\n      let prompt = `[Paragraph]\\n\n                    ${this.markdownOutputEditor.value()}\\n\n                    [TASK]\\n\n                    ${this.regenerationPrompt}\\n\n                    The current level of the language style is:\\n\n                    ${this.style1}:${this.last_value1}\\n\n                    ${this.style2}:${this.last_value2}\\n\n                    ${this.style3}:${this.last_value3}\\n\n                    your goal is:\n                    ${this.style1}:${this.value1}\\n\n                    ${this.style2}:${this.value2}\\n\n                    ${this.style3}:${this.value3}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post(\"/writing_regeneration/\", {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.markdownOutputEditor.value(res.data.content);\n        this.last_value1 = this.value1;\n        this.last_value2 = this.value2;\n        this.last_value3 = this.value3;\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    refreshDrawer() {\n      this.drawer = true;\n    }\n  }\n};","map":{"version":3,"names":["http","VueMarkdown","EasyMDE","VueSimpleRangeSlider","Vue","BootstrapVue","IconsPlugin","use","name","components","mounted","fetch","then","response","json","data","prompts","catch","error","console","log","enableEditMode","enableOutputEditMode","testData","edit","p_edit","sliderBool","generateBool","markdownContent","my_prompts","drawer","my_drawer","direction","stylePrompt","regenerationPrompt","beforeEdit","inputText","inputText2","outputText","models","selectedItem","editMode","m_outputText","markdownEditor","markdownEditor2","markdownOutputEditor","loading","value1","value2","value3","style1","style2","style3","last_value1","last_value2","last_value3","currentTab","tabs","methods","jumpyTo","url","$router","currentRoute","path","push","messagePop","type","message","$message","vm","$nextTick","element","$refs","codemirrorScroll","document","getElementsByClassName","style","maxHeight","overflowY","codemirror","on","value","markdown","markdownEditorOutput","setOption","copyText","$set","confirmDelete","content","post","person","sessionStorage","getItem","res","e","savePromptChange","getElementById","textContent","contentEditable","saveMyPrompt","showSlider","startEdit","output","saveChange","selectItem","selectContent_","selectContent","toAttitudinal","toExperiential","toStyleLearning","cancelPromptChange","mySelectContent_","success","getMyPrompt","getWrtingAssistantHelp","prompt","model","Summary","Style1","Style2","Style3","getWrtingAssistantMimic","mimicPrompt","getRegenerateMimic","refreshDrawer"],"sources":["src/components/ExperientialInput.vue"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n\n<template>\n  <div class=\"container\">\n    <el-button\n      @click=\"toStyleLearning\"\n      type=\"primary\"\n      style=\"margin-top: 4em; margin-left: 1em; margin-right: 1em\"\n      >Style Learning</el-button\n    >\n    <el-button\n      @click=\"toExperiential\"\n      type=\"primary\"\n      style=\"margin-top: 4em; margin-left: 1em; margin-right: 1em\"\n      >Experiential Input</el-button\n    >\n    <el-button\n      @click=\"toAttitudinal\"\n      type=\"primary\"\n      style=\"margin-top: 4em; margin-left: 1em; margin-right: 1em\"\n      >Attitudinal Input</el-button\n    >\n\n    <div class=\"translate-container\">\n      <el-row :gutter=\"0\">\n        <!--output 部分-->\n        <div class=\"grid-content-post2 bg-light\">\n        <div\n          class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n          data-animation-name=\"\"\n          data-animation-duration=\"0\"\n          data-animation-direction=\"\"\n        >\n          <h3 style=\"text-align: left\">\n            <span style=\"font-size: 2.5rem\"\n              >Would you report a coworker who doesn't work or would you just\n              leave them alone?\n              <br />\n            </span>\n          </h3>\n          <p><br /></p>\n\n          <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n            I'll give a fake example:\n          </p>\n          <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n            I'm a web developer at a company. I set my Skype status to busy\n            24/7. Also, if anyone messages me I basically always say I need to\n            get back to them because I'm busy. Then, I don't message them back\n            to try to get back in touch with them. What I'm truly doing is\n            surfing the internet for fun or playing games for fun about 90\n            percent of the time. I make very minor changes to websites I work on\n            and say I need like 10x the amount of time that I truly need.\n          </p>\n          <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n            If I was you're coworker and you saw this, would you be reporting\n            me, leaving me alone, or would you be doing something else?\n          </p>\n          <p><br /><br /><br /></p>\n        </div>\n      </div>\n      </el-row>\n    </div>\n\n    <!-- 核心部件-->\n    <div class=\"translate-container\">\n      <!-- <el-row :gutter=\"20\"> -->\n      <!--input 部分-->\n      <!-- <el-col :span=\"12\"> -->\n      <div class=\"grid-content bg-light\">\n        <label\n          style=\"\n            font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n            font-size: large;\n          \"\n          >Have you ever experienced a similar situation that you'd like to share?</label\n        >\n        <!-- <p style=\"font-size: small; color: grey\">\n          Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.\n        </p> -->\n        <textarea\n          id=\"inputArea\"\n          ref=\"markdownEditor\"\n          class=\"textarea\"\n        ></textarea>\n      </div>\n\n      \n      <div class=\"grid-content bg-light\">\n        <label\n          style=\"\n            font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n            font-size: large;\n          \"\n          >Input</label\n        >\n        <!-- <p style=\"font-size: small; color: grey\">\n          Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.\n        </p> -->\n        <textarea\n          id=\"inputArea\"\n          ref=\"markdownEditor\"\n          class=\"textarea\"\n        ></textarea>\n      </div>\n      <el-button\n        @click=\"\n          getWrtingAssistantHelp();\n          getWrtingAssistantMimic();\n        \"\n        type=\"primary\"\n        style=\"margin-left: 16px; margin-right: 50%\"\n        >submit</el-button\n      >\n\n      <!-- output 部分-->\n    </div>\n\n    <div v-if=\"sliderBool\" v-loading=\"loading\">\n      <b-row align=\"center\">\n        <p style=\"font-size: 2.5rem\">Your language style:</p>\n      </b-row>\n      <p v-text=\"outputText\" style=\"font-size: 1.5rem\"></p>\n    </div>\n\n  \n    <el-col>\n      <div\n        v-show=\"generateBool\"\n        class=\"grid-content bg-light\"\n        v-loading=\"loading\"\n      >\n        <div class=\"label_container\" style=\"display: flex\">\n          <label\n            style=\"\n              font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n              font-size: large;\n            \"\n            >Mimic output</label\n          >\n        </div>\n        <textarea\n          id=\"outputArea\"\n          ref=\"markdownEditorOutput\"\n          class=\"textarea\"\n        ></textarea>\n        <b-row align=\"center\">\n          <el-button @click=\"getRegenerateMimic\" type=\"primary\"\n            >Regenerate</el-button\n          >\n        </b-row>\n      </div>\n      <div class=\"slider-content\" v-if=\"sliderBool\" v-loading=\"loading\">\n        <b-row>\n          <b-row align=\"center\">\n            <p v-text=\"style1\" style=\"font-size: 1.5rem\"></p>\n          </b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">Low</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value1\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">High</p></b-col>\n        </b-row>\n        <b-row align=\"center\">\n          <p v-text=\"style2\" style=\"font-size: 1.5rem\"></p>\n        </b-row>\n        <b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">Low</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value2\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">High</p></b-col>\n        </b-row>\n        <b-row align=\"center\">\n          <p v-text=\"style3\" style=\"font-size: 1.5rem\"></p>\n        </b-row>\n        <b-row>\n          <b-col cols=\"1\"><p style=\"font-size: 1.5rem\">Low</p></b-col>\n          <b-col\n            ><VueSimpleRangeSlider\n              style=\"width: 100%\"\n              :min=\"0\"\n              :max=\"100\"\n              v-model=\"value3\"\n            ></VueSimpleRangeSlider\n          ></b-col>\n          <b-col cols=\"1\"> <p style=\"font-size: 1.5rem\">High</p></b-col>\n        </b-row>\n      </div>\n    </el-col>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\n\nexport default {\n  name: \"ExperientialInput\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider,\n  },\n\n  mounted() {\n    fetch(\"/prompt.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.prompts = data.prompts;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    this.enableEditMode();\n    this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      generateBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      stylePrompt:\n        'Given two paragraphs, please summary the writer\\'s language style of message and give three adjective words or a phrase.\\\n        Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n        {\\n\\\n        \"Summary\": \"[Summary]\",\\n\\\n        \"Style1\": \"[Style1]\",\\n\\\n        \"Style2\": \"[Style2]\",\\n\\\n        \"Style3\": \"[Style3]\"\\n\\\n        }',\n\n\n      regenerationPrompt:\n        \"Adjust the style of the providing paragraph according to three values of the styles.\\\n        The higher value, the stronger the style effect is. 100 is the max value, and 0 is the minimum value. 50 is neutral.\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownEditor2: null,\n      markdownOutputEditor: null,\n\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"\",\n      style2: \"\",\n      style3: \"\",\n      last_value1: 50,\n      last_value2: 50,\n      last_value3: 50,\n\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"],\n    };\n  },\n\n  methods: {\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n        if (!this.markdownEditor2) {\n          this.markdownEditor2 = new EasyMDE({\n            element: this.$refs.markdownEditor2,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor2.codemirror.on(\"change\", () => {\n            vm.inputText2 = vm.markdownEditor2.value();\n            console.log(vm.inputText2); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput,\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http\n        .post(\"/delete_prompt/\", {\n          content: content,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"delete successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.stylePrompt = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\",\n      });\n    },\n\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n\n    toAttitudinal() {\n      this.jumpyTo(\"/attitude_input\");\n    },\n    toExperiential() {\n      this.jumpyTo(\"/experiential_input\");\n    },\n    toStyleLearning() {\n      this.jumpyTo(\"/writing_assistant\");\n    },\n\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n\n    async saveMyPrompt() {\n      http\n        .post(\"/save_prompt/\", {\n          content: this.selectContent,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"save prompt res\", res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"save prompt changes successfully!\");\n            console.log(\"save successfully\");\n          } else {\n            this.messagePop(\"error\", \"fail to save prompt changes\");\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        });\n    },\n\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http\n        .post(\"/get_prompt/\", {\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"get successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getWrtingAssistantHelp() {\n      this.sliderBool = true;\n      this.loading = true;\n      // let prompt = `[Paragraph]\\n\n      //               ${this.inputText}\\n\n      //               [TASK]\\n\n      //               ${this.selectContent}\\n\n      //               [RESULT]\\n\\n`;\n      let prompt = `[Paragraph1]\\n\n                    ${this.inputText}\\n\n                    [Paragraph2]\\n\n                    ${this.inputText2}\\n\n                    [TASK]\\n\n                    ${this.stylePrompt}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http\n        .post(\"/writing_assistant/\", {\n          prompt: prompt,\n          model: this.selectedItem,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.outputText = res.data.content.Summary;\n          this.style1 = res.data.content.Style1;\n          this.style2 = res.data.content.Style2;\n          this.style3 = res.data.content.Style3;\n          // this.markdownOutputEditor.value(this.outputText);\n          console.log(\"output Text:\", res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getWrtingAssistantMimic() {\n      this.generateBool = true;\n      this.loading = true;\n      let prompt = `[Paragraph1]\\n\n                    ${this.inputText}\\n\n                    [Paragraph2]\\n\n                    ${this.inputText2}\\n\n                    [TASK]\\n\n                    ${this.mimicPrompt}\\n\n                    [RESULT]\\n\\n`;\n\n      console.log(\"提交的数据是：\", prompt);\n      http\n        .post(\"/writing_mimic/\", {\n          prompt: prompt,\n          model: this.selectedItem,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.markdownOutputEditor.value(res.data.content);\n          console.log(\"output Text:\", res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getRegenerateMimic() {\n      this.generateBool = true;\n      this.loading = true;\n      let prompt = `[Paragraph]\\n\n                    ${this.markdownOutputEditor.value()}\\n\n                    [TASK]\\n\n                    ${this.regenerationPrompt}\\n\n                    The current level of the language style is:\\n\n                    ${this.style1}:${this.last_value1}\\n\n                    ${this.style2}:${this.last_value2}\\n\n                    ${this.style3}:${this.last_value3}\\n\n                    your goal is:\n                    ${this.style1}:${this.value1}\\n\n                    ${this.style2}:${this.value2}\\n\n                    ${this.style3}:${this.value3}\\n\n                    [RESULT]\\n\\n`;\n\n      console.log(\"提交的数据是：\", prompt);\n      http\n        .post(\"/writing_regeneration/\", {\n          prompt: prompt,\n          model: this.selectedItem,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.markdownOutputEditor.value(res.data.content);\n          this.last_value1 = this.value1;\n          this.last_value2 = this.value2;\n          this.last_value3 = this.value3;\n          console.log(\"output Text:\", res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    refreshDrawer() {\n      this.drawer = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  background: white;\n  width: 90%;\n  height: 4000px;\n  margin: auto;\n}\n.header {\n  margin-left: 4em;\n  /*margin-top: 4em;*/\n  padding-top: 4em;\n  display: flex;\n}\n\n.button {\n  /*width: 100px;*/\n  width: 10%;\n}\n\n.drop-item {\n  /*width: 500px;*/\n  font-family: ColfaxAI, helvetica, sans-serif;\n  font-size: small;\n  /*white-space: normal;*/\n  /*word-wrap: break-word;*/\n}\n\n.translate-container {\n  padding: 20px;\n}\n\n.grid-content {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post2 {\n  height: 500px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.slider-content {\n  height: 450px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n  padding-right: 4em;\n}\n\n.bg-light {\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.textarea {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 550px;\n\n  /*font-family: 'Arial', sans-serif; !* 这将更改字体 *!*/\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px; /* 这将更改字体大小 */\n  color: #333; /* 这将更改文本颜色 */\n  line-height: 1.5; /* 这将更改行高 */\n  letter-spacing: 0.05em; /* 这将更改字符间距 */\n  text-align: justify; /* 这将使文本两端对齐 */\n  overflow-y: scroll;\n}\n\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n.el-menu-item i {\n  float: right;\n  margin-top: 5px;\n  cursor: pointer;\n}\n\n.example {\n  background: #ffffff;\n  margin: 20px;\n  border-color: #e7e7e7;\n  padding: 40px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}