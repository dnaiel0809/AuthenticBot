{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\nexport default {\n  name: \"WritingAssitant\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider\n  },\n  mounted() {\n    // fetch(\"/prompt.json\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.prompts = data.prompts;\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n\n    this.fetchData();\n    this.enableEditMode();\n    // this.shuffleItems();\n    // this.enableEditMode();\n\n    // this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n\n  data() {\n    return {\n      Pid: \"\",\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      generateBool: true,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      // stylePrompt:\n      //   'Given two paragraphs, please summary the writer\\'s language style of message and give three adjective words or a phrase.\\\n      //   Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n      //   {\\n\\\n      //   \"Summary\": \"[Summary]\",\\n\\\n      //   \"Style1\": \"[Style1]\",\\n\\\n      //   \"Style2\": \"[Style2]\",\\n\\\n      //   \"Style3\": \"[Style3]\"\\n\\\n      //   }',\n\n      // mimicPrompt:\n      //   'Given two writing examples, please select three writer\\'s linguistic styles of messages in the below opinion, and summarized it.\\\n      //   (1) formal; (2) positive; (3) analytical; (4) informal; (5) negative; (6) unstructured.\\\n      //   Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n      //   {\\n\\\n      //   \"Summary\": \"[Summary]\",\\n\\\n      //   \"Style1\": \"[Style1]\",\\n\\\n      //   \"Style2\": \"[Style2]\",\\n\\\n      //   \"Style3\": \"[Style3]\"\\n\\\n      //   }',\n      mimicPromptRw: \"You will act as a trained peer supporter, who helps people write supportive messages.\\\n        I will first provide you with a few messages that a person wrote. You need to identify the function words (ie, auxiliary verbs, articles, common adverbs, personal pronouns, indefinite pronouns, prepositions, negations, conjunctions, and quantifiers) \\\n        and language styles (ie, formality, positivity, verbosity, directness, emotion expressiveness) in this person's linguistic style.\\n\\\n        Formality refers to the extent to which the text is formal, polite, and professional.\\n\\\n        Positivity refers to the extent to which the text carries positive sentiments.\\n\\\n        Verbosity pertains to the wordiness and repetitiveness of written content. \\n\\\n        Directness refers to the extent to which speakers reveal their intentions through explicit communication. \\n\\\n        Emotional expressiveness refers to the outward display of emotion in the written content, regardless of valence \\n\\\n        Here are the messages:\\n\\n\",\n      // Prompt:\n      //   \"Please write the support message that responses to the help-seeking post including the user’s writing style samples(if provide), attitude (if provide), and experience (if provide).\\\n      //   Your generate support message should less than 200 words.\",\n\n      PromptRW: \"Write a support message within 200 words in response to the help-seeking post below using the identified functions words and language styles: \",\n      // languagePromptRW: \"Writing in a conversational and informal tone.\",\n      // attitudePromptRW: \"Incroporating my ture thought: \",\n      // experiencePromptRW: \"Sharing my experience: \",\n\n      seekingPost: \"I failed at every aspect of life\\n\\\n        Declining health. couldn't complete my degree. never been in a relationship, lost contact with all my friends. probably gonna get fired from the job soon.\\\n        I turn 25 this year. I've lived liked this since I was a teenager. I gave up on life before it even started. I could have changed all of this but I didn't. I was too much of a coward to do so. Now its too late.\\\n        There is nothing to look forward to. I'm never getting married. I can't go visit another country. I'm gonna rot like this until the day that I die.\\\n        If I don't kms loneliness will. How can one person fuck up this bad? Not just once but multiple times?\",\n      regenerationPrompt: \"Adjust the style of the providing paragraph according to three values of the styles.\\\n        The higher value, the stronger the style effect is. 100 is the max value, and 0 is the minimum value. 50 is neutral.\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n      inputText3: \"\",\n      inputText4: \"\",\n      mimicWriting: \"ttsdf\",\n      style: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-4\",\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor1: null,\n      markdownEditor2: null,\n      markdownEditor3: null,\n      markdownEditor4: null,\n      markdownOutputEditor: null,\n      toAttitudinalBool: false,\n      toExperientialBool: false,\n      toStyleLearningBool: true,\n      loading: false,\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"]\n    };\n  },\n  methods: {\n    fetchData() {\n      console.log(\"ID: \", this.$route.query);\n      this.Pid = this.$route.query.Pid;\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor1) {\n          this.markdownEditor1 = new EasyMDE({\n            element: this.$refs.markdownEditor1\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor1.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor1.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n\n        if (!this.markdownEditor2) {\n          this.markdownEditor2 = new EasyMDE({\n            element: this.$refs.markdownEditor2\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor2.codemirror.on(\"change\", () => {\n            vm.inputText2 = vm.markdownEditor2.value();\n            console.log(vm.inputText2); // 输出当前的输入值\n          });\n        }\n\n        if (!this.markdownEditor3) {\n          this.markdownEditor3 = new EasyMDE({\n            element: this.$refs.markdownEditor3\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor3.codemirror.on(\"change\", () => {\n            vm.inputText3 = vm.markdownEditor3.value();\n            console.log(vm.inputText3); // 输出当前的输入值\n          });\n        }\n\n        if (!this.markdownEditor4) {\n          this.markdownEditor4 = new EasyMDE({\n            element: this.$refs.markdownEditor4\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor4.codemirror.on(\"change\", () => {\n            vm.inputText4 = vm.markdownEditor4.value();\n            console.log(vm.inputText4); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    getWrtingAssistantHelp() {\n      let count = 0;\n      for (let i = 0; i < this.inputText.split(\" \").length; i++) {\n        if (this.inputText.split(\" \")[i] !== \"\") {\n          count++;\n        }\n      }\n      if (count < 10) {\n        this.messagePop(\"error\", \"Please pervide the writing sample more than 100 words. Current word count on first sample is \" + count + \".\");\n        return;\n      }\n      let count2 = 0;\n      for (let i = 0; i < this.inputText2.split(\" \").length; i++) {\n        if (this.inputText2.split(\" \")[i] !== \"\") {\n          count2++;\n        }\n      }\n      if (count2 < 10) {\n        this.messagePop(\"error\", \"Please pervide the writing sample more than 100 words. Current word count on second sample is \" + count2 + \".\");\n        return;\n      }\n      let count3 = 0;\n      for (let i = 0; i < this.inputText3.split(\" \").length; i++) {\n        if (this.inputText3.split(\" \")[i] !== \"\") {\n          count3++;\n        }\n      }\n      if (count3 < 10) {\n        this.messagePop(\"error\", \"Please pervide the writing sample more than 100 words. Current word count on third sample is \" + count3 + \".\");\n        return;\n      }\n      let count4 = 0;\n      for (let i = 0; i < this.inputText4.split(\" \").length; i++) {\n        if (this.inputText4.split(\" \")[i] !== \"\") {\n          count4++;\n        }\n      }\n      if (count4 < 10) {\n        this.messagePop(\"error\", \"Please pervide the writing sample more than 100 words. Current word count on fourth sample is \" + count4 + \".\");\n        return;\n      }\n      this.generateBool = false;\n      this.loading = true;\n      let promptInfo = `${this.mimicPromptRw}\\n\n                    [Writing style sample 1]\\n\n                     ${this.inputText}\\n\n                     [Writing style sample 2]\\n\n                     ${this.inputText2}\\n\n                     [Summary]\\n `;\n      this.messagePop(\"success\", \"Take a few seconds to analyze your text. Please wait.\");\n      console.log(\"提交的数据是：\", promptInfo);\n      http.post(\"/writing_mimic/\", {\n        prompt: promptInfo,\n        model: this.selectedItem,\n        user: this.Pid,\n        info_or_emotional: 2\n      }).then(res => {\n        console.log(\"success\", promptInfo);\n      }).catch(e => {\n        console.log(e);\n      });\n      let promptEmotional = `${this.mimicPromptRw}\\n\n                     [Writing style sample 1]\\n\n                     ${this.inputText3}\\n\n                     [Writing style sample 2]\\n\n                     ${this.inputText4}\\n \n                     [Summary]\\n `;\n      this.messagePop(\"success\", \"Take a few seconds to analyze your text. Please wait.\");\n      console.log(\"提交的数据是：\", promptEmotional);\n      http.post(\"/writing_mimic/\", {\n        prompt: promptEmotional,\n        model: this.selectedItem,\n        user: this.Pid,\n        info_or_emotional: 3\n      }).then(res => {\n        this.loading = false;\n        this.generateBool = true;\n        // this.markdownOutputEditor.value(res.data.content);\n        this.style = res.data.content;\n        this.$router.push({\n          path: \"/writing_assitant_show\",\n          query: {\n            username: this.Pid\n          }\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    submitWriting() {\n      this.getWrtingAssistantHelp();\n    },\n    shuffleItems() {\n      const container = document.getElementById(\"randomContainer\");\n      const elementsArray = Array.from(container.getElementsByClassName(\"randomItem\"));\n      let shuffledArray = this.shuffleArray(elementsArray);\n\n      // Remove current items from container\n      while (container.firstChild) {\n        container.firstChild.remove();\n      }\n\n      // Append shuffled items to container\n      for (let i = 0; i < shuffledArray.length; i++) {\n        container.appendChild(shuffledArray[i]);\n      }\n    },\n    shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]]; // Swap elements\n      }\n\n      return array;\n    }\n  }\n};","map":{"version":3,"names":["http","VueMarkdown","EasyMDE","VueSimpleRangeSlider","Vue","BootstrapVue","IconsPlugin","use","name","components","mounted","fetchData","enableEditMode","data","Pid","testData","edit","p_edit","sliderBool","generateBool","markdownContent","prompts","my_prompts","drawer","my_drawer","direction","mimicPromptRw","PromptRW","seekingPost","regenerationPrompt","beforeEdit","inputText","inputText2","inputText3","inputText4","mimicWriting","style","models","selectedItem","editMode","m_outputText","markdownEditor1","markdownEditor2","markdownEditor3","markdownEditor4","markdownOutputEditor","toAttitudinalBool","toExperientialBool","toStyleLearningBool","loading","currentTab","tabs","methods","console","log","$route","query","jumpyTo","url","$router","currentRoute","path","push","messagePop","type","message","$message","vm","$nextTick","element","$refs","codemirrorScroll","document","getElementsByClassName","maxHeight","overflowY","codemirror","on","value","enableOutputEditMode","markdown","markdownEditorOutput","setOption","getWrtingAssistantHelp","count","i","split","length","count2","count3","count4","promptInfo","post","prompt","model","user","info_or_emotional","then","res","catch","e","promptEmotional","content","username","submitWriting","shuffleItems","container","getElementById","elementsArray","Array","from","shuffledArray","shuffleArray","firstChild","remove","appendChild","array","j","Math","floor","random"],"sources":["src/components/WritingAssitant.vue"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n\n<template>\n  <div>\n    <header class=\"header-slot\">\n      <slot name=\"header\">study</slot>\n    </header>\n    <div class=\"container\">\n      <div id=\"randomContainer\" v-show=\"toStyleLearningBool\">\n        <div class=\"translate-container randomItem\">\n          <el-row :gutter=\"20\">\n            <el-col :span=\"12\">\n              <!--output 部分-->\n              <div class=\"grid-content-post2 bg-light\">\n                <div\n                  class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n                  data-animation-name=\"\"\n                  data-animation-duration=\"0\"\n                  data-animation-direction=\"\"\n                >\n                  <h5 style=\"text-align: left\">\n                    <p><br /></p>\n                    <span style=\"font-size: 1.5rem\">\n                      Subject: I’ve wasted so much time being depressed, that\n                      I’m depressed about wasting time.<br />\n                    </span>\n                  </h5>\n                  <p><br /></p>\n                  <p id=\"isPasted\" style=\"font-size: 1rem\">\n                    I can’t imagine how many days I have wasted to being sad and\n                    crying and not being able to accomplish the things I need to\n                    do. I have responsibilities I have deadlines and none of\n                    them seem to matter when I am in these dark episodes. How\n                    can you force yourself to do what needs to be done when you\n                    feel so hopeless and numb?\n                  </p>\n                  <p><br /><br /><br /></p>\n                </div>\n              </div>\n            </el-col>\n\n            <!-- 核心部件-->\n            <el-col :span=\"12\">\n              <!-- <el-row :gutter=\"20\"> -->\n              <!--input 部分-->\n              <div class=\"grid-content bg-light\">\n                <label\n                  style=\"\n                    font-family: Roboto, RobotoDraft, Helvetica, Arial,\n                      sans-serif;\n                    font-size: large;\n                  \"\n                  >Write your support message.</label\n                >\n                <p style=\"font-size: small; color: grey\">\n                  Note: You should write at less 50 words.\n                </p>\n                <textarea\n                  id=\"inputArea1\"\n                  ref=\"markdownEditor1\"\n                  class=\"textarea\"\n                ></textarea>\n              </div>\n            </el-col>\n          </el-row>\n        </div>\n        <!-- next task  -->\n        <div class=\"translate-container randomItem\">\n          <el-row :gutter=\"0\">\n            <!--output 部分-->\n            <div class=\"grid-content-post2 bg-light\">\n              <div\n                class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n                data-animation-name=\"\"\n                data-animation-duration=\"0\"\n                data-animation-direction=\"\"\n              >\n                <h3 style=\"text-align: left\">\n                  <span style=\"font-size: 2.5rem\"\n                    >How do you tell someone...\n                    <br />\n                  </span>\n                </h3>\n                <p><br /></p>\n\n                <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n                  I'm not ignoring you right now. I'm just disconnected from\n                  reality right now, the days are all blurred together, and I\n                  feel completely numb towards everything around me. So it's\n                  really hard for me to maintain a conversation.\n                </p>\n\n                <p><br /><br /><br /></p>\n              </div>\n            </div>\n          </el-row>\n\n          <div class=\"grid-content bg-light\" v-loading=\"loading\">\n            <label\n              style=\"\n                font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n                font-size: large;\n              \"\n              >Write your support message.</label\n            >\n            <!-- <p style=\"font-size: small; color: grey\">\n          Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.\n        </p> -->\n            <textarea\n              id=\"inputArea\"\n              ref=\"markdownEditor2\"\n              class=\"textarea\"\n            ></textarea>\n          </div>\n        </div>\n        <!-- next task  -->\n        <div class=\"translate-container randomItem\">\n          <el-row :gutter=\"0\">\n            <!--output 部分-->\n            <div class=\"grid-content-post2 bg-light\">\n              <div\n                class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n                data-animation-name=\"\"\n                data-animation-duration=\"0\"\n                data-animation-direction=\"\"\n              >\n                <h3 style=\"text-align: left\">\n                  <span style=\"font-size: 2.5rem\">\n                    I hate how people boast about how much they support mental\n                    illness then once they meet a mentally ill person they want\n                    nothing to do with them\n\n                    <br />\n                  </span>\n                </h3>\n                <p><br /></p>\n\n                <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n                  It's just so fucking tiresome. You see it everywhere on social\n                  media. People will go on and on and on about how we should all\n                  reach out to mentally ill people then when you have the\n                  courage to reach out to them the same fucking people will tell\n                  you bullshit like \"man up\", \"stop being so sensitive\", \"hey\n                  bro at least you're not a starving child in Africa\", \"bro it's\n                  just your mindset you gotta start thinking more positively\",\n                  and so on. Like what's the fucking point. Whenever we do reach\n                  out we either get scolded or our problems get dismissed. I'm\n                  not trying to say this is how it is for everyone but this is\n                  just from my experiences. I just want someone to fucking\n                  listen just once and for once I want to be able to tell\n                  someone about this without fear of eventually getting ghosted.\n                  Is that asking for too much?\n                </p>\n\n                <p><br /><br /><br /></p>\n              </div>\n            </div>\n          </el-row>\n\n          <div class=\"grid-content bg-light\" v-loading=\"loading\">\n            <label\n              style=\"\n                font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n                font-size: large;\n              \"\n              >Write your support message.</label\n            >\n\n            <textarea\n              id=\"inputArea\"\n              ref=\"markdownEditor3\"\n              class=\"textarea\"\n            ></textarea>\n          </div>\n        </div>\n        <!-- next task  -->\n        <div class=\"translate-container randomItem\">\n          <el-row :gutter=\"0\">\n            <!--output 部分-->\n            <div class=\"grid-content-post2 bg-light\">\n              <div\n                class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\"\n                data-animation-name=\"\"\n                data-animation-duration=\"0\"\n                data-animation-direction=\"\"\n              >\n                <h3 style=\"text-align: left\">\n                  <span style=\"font-size: 2.5rem\">\n                    Does anyone else stay up super late to avoid the next day?\n\n                    <br />\n                  </span>\n                </h3>\n                <p><br /></p>\n\n                <p id=\"isPasted\" style=\"font-size: 1.5rem\">\n                  I don’t know if that makes sense. What I mean is that I stay\n                  up as late as possible wasting time because I know that if I\n                  go to sleep, I’ll wake up and have to go to school. I usually\n                  go to bed at around 3:30am and get up at 6am and it’s\n                  destroying me, I’ve been doing this for months and I’m\n                  physically weak and exhausted constantly because of it but my\n                  depression and anxiety demand it. And they always seem to get\n                  their way.\n                </p>\n                <p><br /><br /><br /></p>\n              </div>\n            </div>\n          </el-row>\n\n          <div class=\"grid-content bg-light\" v-loading=\"loading\">\n            <label\n              style=\"\n                font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n                font-size: large;\n              \"\n              >Write your support message.</label\n            >\n            <!-- <p style=\"font-size: small; color: grey\">\n          Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.\n        </p> -->\n            <textarea\n              id=\"inputArea\"\n              ref=\"markdownEditor4\"\n              class=\"textarea\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <el-button\n        @click=\"submitWriting\"\n        type=\"primary\"\n        style=\"margin-left: 16px; margin-right: 50%\"\n        >Submit</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\n\nexport default {\n  name: \"WritingAssitant\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider,\n  },\n\n  mounted() {\n    // fetch(\"/prompt.json\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.prompts = data.prompts;\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //   });\n\n    this.fetchData();\n    this.enableEditMode();\n    // this.shuffleItems();\n    // this.enableEditMode();\n\n    // this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n  data() {\n    return {\n      Pid: \"\",\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      sliderBool: false,\n      generateBool: true,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      // stylePrompt:\n      //   'Given two paragraphs, please summary the writer\\'s language style of message and give three adjective words or a phrase.\\\n      //   Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n      //   {\\n\\\n      //   \"Summary\": \"[Summary]\",\\n\\\n      //   \"Style1\": \"[Style1]\",\\n\\\n      //   \"Style2\": \"[Style2]\",\\n\\\n      //   \"Style3\": \"[Style3]\"\\n\\\n      //   }',\n\n      // mimicPrompt:\n      //   'Given two writing examples, please select three writer\\'s linguistic styles of messages in the below opinion, and summarized it.\\\n      //   (1) formal; (2) positive; (3) analytical; (4) informal; (5) negative; (6) unstructured.\\\n      //   Respond using the following JSON format (In your summary, use single quotation marks \\' instead of double quotation marks “. DON\\'T USE double quotation marks):\\n\\\n      //   {\\n\\\n      //   \"Summary\": \"[Summary]\",\\n\\\n      //   \"Style1\": \"[Style1]\",\\n\\\n      //   \"Style2\": \"[Style2]\",\\n\\\n      //   \"Style3\": \"[Style3]\"\\n\\\n      //   }',\n      mimicPromptRw:\n        \"You will act as a trained peer supporter, who helps people write supportive messages.\\\n        I will first provide you with a few messages that a person wrote. You need to identify the function words (ie, auxiliary verbs, articles, common adverbs, personal pronouns, indefinite pronouns, prepositions, negations, conjunctions, and quantifiers) \\\n        and language styles (ie, formality, positivity, verbosity, directness, emotion expressiveness) in this person's linguistic style.\\n\\\n        Formality refers to the extent to which the text is formal, polite, and professional.\\n\\\n        Positivity refers to the extent to which the text carries positive sentiments.\\n\\\n        Verbosity pertains to the wordiness and repetitiveness of written content. \\n\\\n        Directness refers to the extent to which speakers reveal their intentions through explicit communication. \\n\\\n        Emotional expressiveness refers to the outward display of emotion in the written content, regardless of valence \\n\\\n        Here are the messages:\\n\\n\",\n\n      // Prompt:\n      //   \"Please write the support message that responses to the help-seeking post including the user’s writing style samples(if provide), attitude (if provide), and experience (if provide).\\\n      //   Your generate support message should less than 200 words.\",\n\n      PromptRW:\n        \"Write a support message within 200 words in response to the help-seeking post below using the identified functions words and language styles: \",\n      // languagePromptRW: \"Writing in a conversational and informal tone.\",\n      // attitudePromptRW: \"Incroporating my ture thought: \",\n      // experiencePromptRW: \"Sharing my experience: \",\n\n      seekingPost:\n        \"I failed at every aspect of life\\n\\\n        Declining health. couldn't complete my degree. never been in a relationship, lost contact with all my friends. probably gonna get fired from the job soon.\\\n        I turn 25 this year. I've lived liked this since I was a teenager. I gave up on life before it even started. I could have changed all of this but I didn't. I was too much of a coward to do so. Now its too late.\\\n        There is nothing to look forward to. I'm never getting married. I can't go visit another country. I'm gonna rot like this until the day that I die.\\\n        If I don't kms loneliness will. How can one person fuck up this bad? Not just once but multiple times?\",\n\n      regenerationPrompt:\n        \"Adjust the style of the providing paragraph according to three values of the styles.\\\n        The higher value, the stronger the style effect is. 100 is the max value, and 0 is the minimum value. 50 is neutral.\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n      inputText3: \"\",\n      inputText4: \"\",\n\n      mimicWriting: \"ttsdf\",\n      style: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-4\",\n\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor1: null,\n      markdownEditor2: null,\n      markdownEditor3: null,\n      markdownEditor4: null,\n      markdownOutputEditor: null,\n\n      toAttitudinalBool: false,\n      toExperientialBool: false,\n      toStyleLearningBool: true,\n      loading: false,\n\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"],\n    };\n  },\n\n  methods: {\n    fetchData() {\n      console.log(\"ID: \", this.$route.query);\n      this.Pid = this.$route.query.Pid;\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor1) {\n          this.markdownEditor1 = new EasyMDE({\n            element: this.$refs.markdownEditor1,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor1.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor1.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n        if (!this.markdownEditor2) {\n          this.markdownEditor2 = new EasyMDE({\n            element: this.$refs.markdownEditor2,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor2.codemirror.on(\"change\", () => {\n            vm.inputText2 = vm.markdownEditor2.value();\n            console.log(vm.inputText2); // 输出当前的输入值\n          });\n        }\n        if (!this.markdownEditor3) {\n          this.markdownEditor3 = new EasyMDE({\n            element: this.$refs.markdownEditor3,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor3.codemirror.on(\"change\", () => {\n            vm.inputText3 = vm.markdownEditor3.value();\n            console.log(vm.inputText3); // 输出当前的输入值\n          });\n        }\n        if (!this.markdownEditor4) {\n          this.markdownEditor4 = new EasyMDE({\n            element: this.$refs.markdownEditor4,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor4.codemirror.on(\"change\", () => {\n            vm.inputText4 = vm.markdownEditor4.value();\n            console.log(vm.inputText4); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput,\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    getWrtingAssistantHelp() {\n      let count = 0;\n      for (let i = 0; i < this.inputText.split(\" \").length; i++) {\n        if (this.inputText.split(\" \")[i] !== \"\") {\n          count++;\n        }\n      }\n\n      if (count < 10) {\n        this.messagePop(\n          \"error\",\n          \"Please pervide the writing sample more than 100 words. Current word count on first sample is \" +\n            count +\n            \".\"\n        );\n        return;\n      }\n\n      let count2 = 0;\n      for (let i = 0; i < this.inputText2.split(\" \").length; i++) {\n        if (this.inputText2.split(\" \")[i] !== \"\") {\n          count2++;\n        }\n      }\n\n      if (count2 < 10) {\n        this.messagePop(\n          \"error\",\n          \"Please pervide the writing sample more than 100 words. Current word count on second sample is \" +\n            count2 +\n            \".\"\n        );\n        return;\n      }\n      let count3 = 0;\n      for (let i = 0; i < this.inputText3.split(\" \").length; i++) {\n        if (this.inputText3.split(\" \")[i] !== \"\") {\n          count3++;\n        }\n      }\n\n      if (count3 < 10) {\n        this.messagePop(\n          \"error\",\n          \"Please pervide the writing sample more than 100 words. Current word count on third sample is \" +\n            count3 +\n            \".\"\n        );\n        return;\n      }\n      let count4 = 0;\n      for (let i = 0; i < this.inputText4.split(\" \").length; i++) {\n        if (this.inputText4.split(\" \")[i] !== \"\") {\n          count4++;\n        }\n      }\n\n      if (count4 < 10) {\n        this.messagePop(\n          \"error\",\n          \"Please pervide the writing sample more than 100 words. Current word count on fourth sample is \" +\n            count4 +\n            \".\"\n        );\n        return;\n      }\n      this.generateBool = false;\n      this.loading = true;\n\n      let promptInfo = `${this.mimicPromptRw}\\n\n                    [Writing style sample 1]\\n\n                     ${this.inputText}\\n\n                     [Writing style sample 2]\\n\n                     ${this.inputText2}\\n\n                     [Summary]\\n `;\n      this.messagePop(\n        \"success\",\n        \"Take a few seconds to analyze your text. Please wait.\"\n      );\n      console.log(\"提交的数据是：\", promptInfo);\n      http\n        .post(\"/writing_mimic/\", {\n          prompt: promptInfo,\n          model: this.selectedItem,\n          user: this.Pid,\n          info_or_emotional: 2,\n        })\n        .then((res) => {\n          console.log(\"success\", promptInfo);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n\n      let promptEmotional = `${this.mimicPromptRw}\\n\n                     [Writing style sample 1]\\n\n                     ${this.inputText3}\\n\n                     [Writing style sample 2]\\n\n                     ${this.inputText4}\\n \n                     [Summary]\\n `;\n      this.messagePop(\n        \"success\",\n        \"Take a few seconds to analyze your text. Please wait.\"\n      );\n      console.log(\"提交的数据是：\", promptEmotional);\n      http\n        .post(\"/writing_mimic/\", {\n          prompt: promptEmotional,\n          model: this.selectedItem,\n          user: this.Pid,\n          info_or_emotional: 3,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.generateBool = true;\n          // this.markdownOutputEditor.value(res.data.content);\n          this.style = res.data.content;\n          this.$router.push({\n            path: \"/writing_assitant_show\",\n            query: { username: this.Pid },\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    submitWriting() {\n      this.getWrtingAssistantHelp();\n    },\n    shuffleItems() {\n      const container = document.getElementById(\"randomContainer\");\n      const elementsArray = Array.from(\n        container.getElementsByClassName(\"randomItem\")\n      );\n      let shuffledArray = this.shuffleArray(elementsArray);\n\n      // Remove current items from container\n      while (container.firstChild) {\n        container.firstChild.remove();\n      }\n\n      // Append shuffled items to container\n      for (let i = 0; i < shuffledArray.length; i++) {\n        container.appendChild(shuffledArray[i]);\n      }\n    },\n\n    shuffleArray(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]]; // Swap elements\n      }\n      return array;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  background: white;\n  width: 75%;\n  height: 6000px;\n  margin: auto;\n}\n.header {\n  margin-left: 4em;\n  /*margin-top: 4em;*/\n  padding-top: 4em;\n  display: flex;\n}\n\n.button {\n  /*width: 100px;*/\n  width: 10%;\n}\n\n.drop-item {\n  /*width: 500px;*/\n  font-family: ColfaxAI, helvetica, sans-serif;\n  font-size: small;\n  /*white-space: normal;*/\n  /*word-wrap: break-word;*/\n}\n\n.translate-container {\n  padding: 20px;\n}\n\n.grid-content {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post2 {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.slider-content {\n  height: 450px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n  padding-right: 4em;\n}\n\n.bg-light {\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.textarea {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 550px;\n\n  /*font-family: 'Arial', sans-serif; !* 这将更改字体 *!*/\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px; /* 这将更改字体大小 */\n  color: #333; /* 这将更改文本颜色 */\n  line-height: 1.5; /* 这将更改行高 */\n  letter-spacing: 0.05em; /* 这将更改字符间距 */\n  text-align: justify; /* 这将使文本两端对齐 */\n  overflow-y: scroll;\n}\n\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n.el-menu-item i {\n  float: right;\n  margin-top: 5px;\n  cursor: pointer;\n}\n\n.example {\n  background: #ffffff;\n  margin: 20px;\n  border-color: #e7e7e7;\n  padding: 40px;\n}\n\n.header-slot {\n  background: #eee;\n  padding: 50px 100px;\n  position: fixed;\n  bottom: 0;\n}\n</style>\n"],"mappings":";AAiPA;;AAEA,OAAAA,IAAA;AACA,OAAAC,WAAA;AACA,OAAAC,OAAA;AACA;AACA,OAAAC,oBAAA;AACA;AACA,OAAAC,GAAA;AACA,SAAAC,YAAA,EAAAC,WAAA;;AAEA;AACA;AACA;;AAEA;AACAF,GAAA,CAAAG,GAAA,CAAAF,YAAA;AAEA;EACAG,IAAA;EACAC,UAAA;IACAR,WAAA;IACAC,OAAA;IACAC;EACA;EAEAO,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,KAAAC,SAAA;IACA,KAAAC,cAAA;IACA;IACA;;IAEA;;IAEA;EACA;;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,QAAA;MACAC,IAAA;MACAC,MAAA;MACAC,UAAA;MACAC,YAAA;MACAC,eAAA;MACAC,OAAA;MACAC,UAAA;MACAC,MAAA;MACAC,SAAA;MACAC,SAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,aAAA,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAEA;MACA;MACA;;MAEAC,QAAA,EACA;MACA;MACA;MACA;;MAEAC,WAAA,EACA;AACA;AACA;AACA;AACA;MAEAC,kBAAA,EACA;AACA;MACAC,UAAA;MACAC,SAAA;MACAC,UAAA;MACAC,UAAA;MACAC,UAAA;MAEAC,YAAA;MACAC,KAAA;MACA;MACAC,MAAA;MACAC,YAAA;MAEAC,QAAA;MACAC,YAAA;MACAC,eAAA;MACAC,eAAA;MACAC,eAAA;MACAC,eAAA;MACAC,oBAAA;MAEAC,iBAAA;MACAC,kBAAA;MACAC,mBAAA;MACAC,OAAA;MAEAC,UAAA;MACAC,IAAA;IACA;EACA;EAEAC,OAAA;IACAzC,UAAA;MACA0C,OAAA,CAAAC,GAAA,cAAAC,MAAA,CAAAC,KAAA;MACA,KAAA1C,GAAA,QAAAyC,MAAA,CAAAC,KAAA,CAAA1C,GAAA;IACA;IACA2C,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}