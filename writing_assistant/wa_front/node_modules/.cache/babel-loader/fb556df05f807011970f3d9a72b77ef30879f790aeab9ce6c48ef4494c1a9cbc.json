{"ast":null,"code":"/*!\n * vue-gapi v1.1.1\n * (c) 2021 CedricPoilly\n * Released under the MIT License.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction getObjectCopy(object) {\n  return JSON.parse(JSON.stringify(object));\n}\nfunction loadGapiScript() {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    script.onreadystatechange = script.onload = function () {\n      var interval = setInterval(function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          clearInterval(interval);\n          if (window.gapi) {\n            resolve(window.gapi);\n          } else {\n            reject();\n          }\n        }\n      }, 100);\n    };\n    script.onerror = function (message, url, line, column, error) {\n      reject({\n        message: message,\n        url: url,\n        line: line,\n        column: column,\n        error: error\n      });\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n}\nvar GapiClientProvider = function GapiClientProvider(clientConfig) {\n  this.clientConfig = getObjectCopy(clientConfig);\n  this.promise = null;\n  this.client = null;\n};\nGapiClientProvider.prototype.getClientConfig = function getClientConfig() {\n  return this.clientConfig;\n};\nGapiClientProvider.prototype.getClient = function getClient() {\n  var this$1$1 = this;\n  if (null !== this.client) {\n    return Promise.resolve(this.client);\n  }\n  if (null === this.promise) {\n    this.promise = loadGapiScript().then(function (gapi) {\n      return new Promise(function (resolve, reject) {\n        gapi.load('client:auth2', function () {\n          gapi.client.init(this$1$1.clientConfig).then(function () {\n            this$1$1.client = {\n              gapi: gapi,\n              authInstance: gapi.auth2.getAuthInstance()\n            };\n            resolve(this$1$1.client);\n          }, reject);\n        });\n      });\n    });\n  }\n  return this.promise;\n};\nfunction sessionFromCurrentUser(currentUser) {\n  var session = sessionFromAuthResponse(currentUser.getAuthResponse(true));\n  var profile = currentUser.getBasicProfile();\n  if (profile) {\n    session.id = profile.getId();\n    session.fullName = profile.getName();\n    session.firstName = profile.getGivenName();\n    session.lastName = profile.getFamilyName();\n    session.email = profile.getEmail();\n    session.imageUrl = profile.getImageUrl();\n  }\n  return session;\n}\nfunction sessionFromAuthResponse(authResponse) {\n  return {\n    accessToken: authResponse.access_token,\n    idToken: authResponse.id_token,\n    expiresAt: authResponse.expires_at\n  };\n}\n\n/**\n * Google API Client.\n *\n * @typedef GoogleAuthService#gapi\n * @see {@link https://github.com/google/google-api-javascript-client}\n */\n\n/**\n * Singleton class that provides methods to allow the user to sign in with a\n * Google account, get the user's current sign-in status, get specific data\n * from the user's Google profile, request additional scopes, and sign out\n * from the current account.\n *\n * @typedef GoogleAuthService#GoogleAuth\n * @see {@link https://developers.google.com/identity/sign-in/web/reference#authentication}\n */\n\n/**\n * Object that represents the current user.\n *\n * @typedef GoogleAuthService#GoogleUser\n * @see {@link https://developers.google.com/identity/sign-in/web/reference#googleusergetid}\n */\n\n/**\n * Exposed as a <code>$gapi</code> member of the {@link Vue} instance.\n *\n * @class GoogleAuthService\n */\nvar GoogleAuthService = function GoogleAuthService(clientProvider, sessionStorage) {\n  this.clientProvider = clientProvider;\n  this.sessionStorage = sessionStorage;\n};\n\n/**\n * Returns an initialized {@link GoogleAuthService#gapi} client.\n *\n * @method GoogleAuthService#getGapiClient\n * @see {@link https://github.com/google/google-api-javascript-client/blob/master/docs/start.md}\n *\n * @return {Promise<GoogleAuthService#gapi>}\n */\nGoogleAuthService.prototype.getGapiClient = function getGapiClient() {\n  return this.clientProvider.getClient().then(function (ref) {\n    var gapi = ref.gapi;\n    return gapi;\n  });\n};\n\n/**\n * Returns the {@link GoogleAuthService#GoogleAuth} object.\n *\n * @method GoogleAuthService#getAuthInstance\n * @see [gapi.auth2.getAuthInstance]{@link https://developers.google.com/identity/sign-in/web/reference#gapiauth2getauthinstance}\n * @since 1.0.0\n *\n * @return {Promise<GoogleAuthService#GoogleAuth>}\n */\nGoogleAuthService.prototype.getAuthInstance = function getAuthInstance() {\n  return this.clientProvider.getClient().then(function (ref) {\n    var authInstance = ref.authInstance;\n    return authInstance;\n  });\n};\n\n/**\n * Returns a {@link GoogleAuthService#GoogleUser} object that represents the current user.\n *\n * @method GoogleAuthService#getCurrentUser\n * @see [GoogleAuth.currentUser.get]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthcurrentuserget}\n * @since 1.0.0\n *\n * @return {Promise<GoogleAuthService#GoogleUser>}\n */\nGoogleAuthService.prototype.getCurrentUser = function getCurrentUser() {\n  return this.getAuthInstance().then(function (authInstance) {\n    return authInstance.currentUser.get();\n  });\n};\n\n/**\n * Returns the authorization code set via {@link GoogleAuthService#grantOfflineAccess}.\n *\n * @method GoogleAuthService#getOfflineAccessCode\n *\n * @return {string|null}\n */\nGoogleAuthService.prototype.getOfflineAccessCode = function getOfflineAccessCode() {\n  return this.sessionStorage.getItem('offlineAccessCode');\n};\n\n/**\n * Get permission from the user to access the specified scopes offline.\n *\n * @method GoogleAuthService#grantOfflineAccess\n * @see [GoogleAuth.grantOfflineAccess]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthgrantofflineaccessoptions}\n *\n * @return {Promise<string>} authorization code\n */\nGoogleAuthService.prototype.grantOfflineAccess = function grantOfflineAccess() {\n  var this$1$1 = this;\n  return this.getAuthInstance().then(function (authInstance) {\n    return authInstance.grantOfflineAccess().then(function (ref) {\n      var code = ref.code;\n      this$1$1.sessionStorage.setItem('offlineAccessCode', code);\n      return code;\n    });\n  });\n};\n\n/**\n * Check if requested scopes were granted or not.\n *\n * @private\n * @method GoogleAuthService#hasGrantedRequestedScopes\n * @param {GoogleAuthService#GoogleUser} currentUser\n *\n * @return {boolean}\n */\nGoogleAuthService.prototype.hasGrantedRequestedScopes = function hasGrantedRequestedScopes(currentUser) {\n  var ref = this.clientProvider.getClientConfig();\n  var scope = ref.scope;\n  return scope ? currentUser.hasGrantedScopes(scope) : true;\n};\n\n/**\n * @typedef GoogleAuthService#LoginOptions\n * @property {boolean} [grantOfflineAccess=false] Additionally gets permission from the user to access the specified scopes offline via {@link GoogleAuthService#getOfflineAccessCode}\n */\n\n/**\n * @typedef GoogleAuthService#LoginResponse\n * @property {GoogleUser} currentUser Current user\n * @property {gapi} gapi Initialized {@link gapi} client\n * @property {boolean} hasGrantedScopes <code>true</code> if the requested scopes were granted.\n * @property {string} [code] Authorization code if <code>grantOfflineAccess: true</code>\n */\n\n/**\n * Signs in the user and initializes session.\n *\n * @method GoogleAuthService#login\n * @see [GoogleAuth.signIn]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthsignin}\n *\n * @param {GoogleAuthService#LoginOptions} [options]\n *\n * @return {Promise<GoogleAuthService#LoginResponse>}\n */\nGoogleAuthService.prototype.login = function login() {\n  var this$1$1 = this;\n  return this.clientProvider.getClient().then(function (ref) {\n    var gapi = ref.gapi;\n    var authInstance = ref.authInstance;\n    return authInstance.signIn().then(function (currentUser) {\n      this$1$1.sessionStorage.set(sessionFromCurrentUser(currentUser));\n      return {\n        currentUser: currentUser,\n        gapi: gapi,\n        hasGrantedScopes: this$1$1.hasGrantedRequestedScopes(currentUser)\n      };\n    });\n  });\n};\n\n/**\n * Forces a refresh of the access token.\n *\n * This should be placed in your App.vue on the created page and run on a timer of 45min.\n *\n * @method GoogleAuthService#refreshToken\n * @see [GoogleUser.reloadAuthResponse]{@link https://developers.google.com/identity/sign-in/web/reference#googleuserreloadauthresponse}\n *\n * @return {Promise<AuthResponse>}\n *\n * @example\n * <script>\n *   name: 'App'\n *\n *   created () {\n *   try {\n *     // NOTE: 45min refresh policy is what google recommends\n *     window.setInterval(this.$gapi.refreshToken(), 2.7e+6)\n *   } catch (e) {\n *     console.error(e)\n *   }\n *\n * }\n * </script>\n */\nGoogleAuthService.prototype.refreshToken = function refreshToken() {\n  var this$1$1 = this;\n  return this.getCurrentUser().then(function (currentUser) {\n    return currentUser.reloadAuthResponse();\n  }).then(function (authResponse) {\n    this$1$1.sessionStorage.set(Object.assign({}, this$1$1.sessionStorage.get(), sessionFromAuthResponse(authResponse)));\n    return authResponse;\n  });\n};\n\n/**\n * Ask to grant scopes from user.\n *\n * @method GoogleAuthService#grant\n * @see [GoogleUser.grant]{@link https://developers.google.com/identity/sign-in/web/reference#googleusergrantoptions}\n * @since 0.4.0\n *\n * @return {Promise<GoogleAuthService#GoogleUser>}\n */\nGoogleAuthService.prototype.grant = function grant() {\n  var this$1$1 = this;\n  return this.getCurrentUser().then(function (currentUser) {\n    if (this$1$1.hasGrantedRequestedScopes(currentUser)) {\n      return currentUser;\n    }\n    var ref = this$1$1.clientProvider.getClientConfig();\n    var scope = ref.scope;\n    return currentUser.grant({\n      scope: scope\n    }).then(function () {\n      return currentUser;\n    });\n  });\n};\n\n/**\n * Signs out the current account from the application and clear session storage.\n *\n * @method GoogleAuthService#logout\n * @see [GoogleAuth.signOut]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthsignout}\n *\n * @return {Promise}\n */\nGoogleAuthService.prototype.logout = function logout() {\n  var this$1$1 = this;\n  return this.getAuthInstance().then(function (authInstance) {\n    return authInstance.signOut();\n  }).then(function () {\n    return this$1$1.sessionStorage.clear();\n  });\n};\n\n/**\n * Determines if the user is signed in via local storage.\n *\n * @method GoogleAuthService#isAuthenticated\n * @since 0.0.10\n * @return {boolean}\n */\nGoogleAuthService.prototype.isAuthenticated = function isAuthenticated() {\n  return new Date().getTime() < this.sessionStorage.getItem('expiresAt');\n};\n\n/**\n * Determines if the user is signed in via Google.\n *\n * @method GoogleAuthService#isSignedIn\n * @see [GoogleUser.isSignedIn]{@link https://developers.google.com/identity/sign-in/web/reference#googleuserissignedin}\n * @since 0.0.10\n *\n * @return {Promise<boolean>}\n */\nGoogleAuthService.prototype.isSignedIn = function isSignedIn() {\n  return this.getCurrentUser().then(function (currentUser) {\n    return currentUser.isSignedIn();\n  });\n};\n\n/**\n * Accept the callback to be notified when the authentication status changes.\n *\n * @method GoogleAuthService#listenUserSignIn\n * @see [GoogleAuth.isSignedIn.listen]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthissignedinlistenlistener}\n * @since 0.0.10\n *\n * @param {function} callback\n * the callback function to be notified of an authentication status change\n *\n * @return {Promise<void>}\n */\nGoogleAuthService.prototype.listenUserSignIn = function listenUserSignIn(callback) {\n  return this.getAuthInstance().then(function (authInstance) {\n    callback(authInstance.currentUser.get().isSignedIn());\n    authInstance.isSignedIn.listen(callback);\n  });\n};\n\n/**\n * @typedef {object} GoogleAuthService#UserData\n *\n * @see [gapi.auth2.AuthResponse]{@link https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse}\n * @see [GoogleUser.getBasicProfile]{@link https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile}\n *\n * @property {string} id user's unique ID string\n * @property {string} firstName given name\n * @property {string} lastName family name\n * @property {string} fullName full name\n * @property {string} email\n * @property {string} imageUrl\n * @property {number} expiresAt\n * @property {string} accessToken granted access token\n * @property {string} idToken granted ID token\n * @property {string} [offlineAccessCode]\n */\n\n/**\n * Gets the user data from local storage\n *\n * @method GoogleAuthService#getUserData\n * @since 0.0.10\n *\n * @return {GoogleAuthService#UserData|null}\n */\nGoogleAuthService.prototype.getUserData = function getUserData() {\n  return this.sessionStorage.get();\n};\nvar LOCAL_STORAGE_KEY = 'gapi.session';\nvar SessionStorage = function SessionStorage(localStorage) {\n  if (localStorage === void 0) localStorage = window.localStorage;\n  this.localStorage = localStorage;\n};\nSessionStorage.prototype.set = function set(session) {\n  this.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(session));\n};\nSessionStorage.prototype.setItem = function setItem(key, value) {\n  var session = this.get() || {};\n  session[key] = value;\n  this.set(session);\n};\nSessionStorage.prototype.get = function get() {\n  return JSON.parse(this.localStorage.getItem(LOCAL_STORAGE_KEY));\n};\nSessionStorage.prototype.getItem = function getItem(key) {\n  var session = this.get() || {};\n  return session[key];\n};\nSessionStorage.prototype.clear = function clear() {\n  this.localStorage.removeItem(LOCAL_STORAGE_KEY);\n};\n\n/**\n * @class Vue\n */\n\n/** @module vue-gapi */\n\n/**\n * <code>gapi.client.init</code> configuration parameters.\n *\n * @typedef {object} Options\n * @static\n * @see [gapi.client.init]{@link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md#----gapiclientinitargs--}\n *\n * @property {string} [apiKey] The API Key to use\n * @property {string[]} [discoveryDocs] An array of discovery doc URLs or discovery doc JSON objects\n * @property {string} [clientId] The app's client ID, found and created in the Google Developers Console\n * @property {string} [scope] The scopes to request, as a space-delimited string\n */\n\nvar index = {\n  /**\n   * @param {Vue} Vue Vue constructor\n   * @param {module:vue-gapi.Options} clientConfig VueGapi plugin options\n   * @see [Using a Plugin]{@link https://vuejs.org/v2/guide/plugins.html#Using-a-Plugin}\n   */\n  install: function (Vue, clientConfig) {\n    var clientProvider = new GapiClientProvider(clientConfig);\n    var sessionStorage = new SessionStorage();\n\n    /**\n     * @memberof Vue\n     * @member {GoogleAuthService}\n     */\n    Vue.prototype.$gapi = new GoogleAuthService(clientProvider, sessionStorage);\n  }\n};\nvar version = '1.1.1';\nexports['default'] = index;\nexports.version = version;","map":{"version":3,"names":["Object","defineProperty","exports","value","getObjectCopy","object","JSON","parse","stringify","loadGapiScript","Promise","resolve","reject","script","document","createElement","src","onreadystatechange","onload","interval","setInterval","readyState","test","clearInterval","window","gapi","onerror","message","url","line","column","error","getElementsByTagName","appendChild","GapiClientProvider","clientConfig","promise","client","prototype","getClientConfig","getClient","this$1$1","then","load","init","authInstance","auth2","getAuthInstance","sessionFromCurrentUser","currentUser","session","sessionFromAuthResponse","getAuthResponse","profile","getBasicProfile","id","getId","fullName","getName","firstName","getGivenName","lastName","getFamilyName","email","getEmail","imageUrl","getImageUrl","authResponse","accessToken","access_token","idToken","id_token","expiresAt","expires_at","GoogleAuthService","clientProvider","sessionStorage","getGapiClient","ref","getCurrentUser","get","getOfflineAccessCode","getItem","grantOfflineAccess","code","setItem","hasGrantedRequestedScopes","scope","hasGrantedScopes","login","signIn","set","refreshToken","reloadAuthResponse","assign","grant","logout","signOut","clear","isAuthenticated","Date","getTime","isSignedIn","listenUserSignIn","callback","listen","getUserData","LOCAL_STORAGE_KEY","SessionStorage","localStorage","key","removeItem","index","install","Vue","$gapi","version"],"sources":["/Users/lee/Downloads/writing_assistant/wa_front/node_modules/vue-gapi/dist/vue-gapi.common.js"],"sourcesContent":["/*!\n * vue-gapi v1.1.1\n * (c) 2021 CedricPoilly\n * Released under the MIT License.\n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getObjectCopy(object) {\n  return JSON.parse(JSON.stringify(object))\n}\n\nfunction loadGapiScript() {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.src = 'https://apis.google.com/js/api.js';\n    script.onreadystatechange = script.onload = function () {\n      var interval = setInterval(function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          clearInterval(interval);\n          if (window.gapi) {\n            resolve(window.gapi);\n          } else {\n            reject();\n          }\n        }\n      }, 100);\n    };\n    script.onerror = function (message, url, line, column, error) {\n      reject({ message: message, url: url, line: line, column: column, error: error });\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n  })\n}\n\nvar GapiClientProvider = function GapiClientProvider(clientConfig) {\n  this.clientConfig = getObjectCopy(clientConfig);\n  this.promise = null;\n  this.client = null;\n};\n\nGapiClientProvider.prototype.getClientConfig = function getClientConfig () {\n  return this.clientConfig\n};\n\nGapiClientProvider.prototype.getClient = function getClient () {\n    var this$1$1 = this;\n\n  if (null !== this.client) {\n    return Promise.resolve(this.client)\n  }\n\n  if (null === this.promise) {\n    this.promise = loadGapiScript().then(function (gapi) {\n      return new Promise(function (resolve, reject) {\n        gapi.load('client:auth2', function () {\n          gapi.client.init(this$1$1.clientConfig).then(function () {\n            this$1$1.client = {\n              gapi: gapi,\n              authInstance: gapi.auth2.getAuthInstance(),\n            };\n            resolve(this$1$1.client);\n          }, reject);\n        });\n      })\n    });\n  }\n\n  return this.promise\n};\n\nfunction sessionFromCurrentUser(currentUser) {\n  var session = sessionFromAuthResponse(currentUser.getAuthResponse(true));\n  var profile = currentUser.getBasicProfile();\n\n  if (profile) {\n    session.id = profile.getId();\n    session.fullName = profile.getName();\n    session.firstName = profile.getGivenName();\n    session.lastName = profile.getFamilyName();\n    session.email = profile.getEmail();\n    session.imageUrl = profile.getImageUrl();\n  }\n\n  return session\n}\n\nfunction sessionFromAuthResponse(authResponse) {\n  return {\n    accessToken: authResponse.access_token,\n    idToken: authResponse.id_token,\n    expiresAt: authResponse.expires_at,\n  }\n}\n\n/**\n * Google API Client.\n *\n * @typedef GoogleAuthService#gapi\n * @see {@link https://github.com/google/google-api-javascript-client}\n */\n\n/**\n * Singleton class that provides methods to allow the user to sign in with a\n * Google account, get the user's current sign-in status, get specific data\n * from the user's Google profile, request additional scopes, and sign out\n * from the current account.\n *\n * @typedef GoogleAuthService#GoogleAuth\n * @see {@link https://developers.google.com/identity/sign-in/web/reference#authentication}\n */\n\n/**\n * Object that represents the current user.\n *\n * @typedef GoogleAuthService#GoogleUser\n * @see {@link https://developers.google.com/identity/sign-in/web/reference#googleusergetid}\n */\n\n/**\n * Exposed as a <code>$gapi</code> member of the {@link Vue} instance.\n *\n * @class GoogleAuthService\n */\nvar GoogleAuthService = function GoogleAuthService(clientProvider, sessionStorage) {\n  this.clientProvider = clientProvider;\n  this.sessionStorage = sessionStorage;\n};\n\n/**\n * Returns an initialized {@link GoogleAuthService#gapi} client.\n *\n * @method GoogleAuthService#getGapiClient\n * @see {@link https://github.com/google/google-api-javascript-client/blob/master/docs/start.md}\n *\n * @return {Promise<GoogleAuthService#gapi>}\n */\nGoogleAuthService.prototype.getGapiClient = function getGapiClient () {\n  return this.clientProvider.getClient().then(function (ref) {\n      var gapi = ref.gapi;\n\n      return gapi;\n    })\n};\n\n/**\n * Returns the {@link GoogleAuthService#GoogleAuth} object.\n *\n * @method GoogleAuthService#getAuthInstance\n * @see [gapi.auth2.getAuthInstance]{@link https://developers.google.com/identity/sign-in/web/reference#gapiauth2getauthinstance}\n * @since 1.0.0\n *\n * @return {Promise<GoogleAuthService#GoogleAuth>}\n */\nGoogleAuthService.prototype.getAuthInstance = function getAuthInstance () {\n  return this.clientProvider\n    .getClient()\n    .then(function (ref) {\n        var authInstance = ref.authInstance;\n\n        return authInstance;\n    })\n};\n\n/**\n * Returns a {@link GoogleAuthService#GoogleUser} object that represents the current user.\n *\n * @method GoogleAuthService#getCurrentUser\n * @see [GoogleAuth.currentUser.get]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthcurrentuserget}\n * @since 1.0.0\n *\n * @return {Promise<GoogleAuthService#GoogleUser>}\n */\nGoogleAuthService.prototype.getCurrentUser = function getCurrentUser () {\n  return this.getAuthInstance().then(function (authInstance) {\n    return authInstance.currentUser.get()\n  })\n};\n\n/**\n * Returns the authorization code set via {@link GoogleAuthService#grantOfflineAccess}.\n *\n * @method GoogleAuthService#getOfflineAccessCode\n *\n * @return {string|null}\n */\nGoogleAuthService.prototype.getOfflineAccessCode = function getOfflineAccessCode () {\n  return this.sessionStorage.getItem('offlineAccessCode')\n};\n\n/**\n * Get permission from the user to access the specified scopes offline.\n *\n * @method GoogleAuthService#grantOfflineAccess\n * @see [GoogleAuth.grantOfflineAccess]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthgrantofflineaccessoptions}\n *\n * @return {Promise<string>} authorization code\n */\nGoogleAuthService.prototype.grantOfflineAccess = function grantOfflineAccess () {\n    var this$1$1 = this;\n\n  return this.getAuthInstance().then(function (authInstance) {\n    return authInstance.grantOfflineAccess().then(function (ref) {\n        var code = ref.code;\n\n      this$1$1.sessionStorage.setItem('offlineAccessCode', code);\n\n      return code\n    })\n  })\n};\n\n/**\n * Check if requested scopes were granted or not.\n *\n * @private\n * @method GoogleAuthService#hasGrantedRequestedScopes\n * @param {GoogleAuthService#GoogleUser} currentUser\n *\n * @return {boolean}\n */\nGoogleAuthService.prototype.hasGrantedRequestedScopes = function hasGrantedRequestedScopes (currentUser) {\n  var ref = this.clientProvider.getClientConfig();\n    var scope = ref.scope;\n\n  return scope ? currentUser.hasGrantedScopes(scope) : true\n};\n\n/**\n * @typedef GoogleAuthService#LoginOptions\n * @property {boolean} [grantOfflineAccess=false] Additionally gets permission from the user to access the specified scopes offline via {@link GoogleAuthService#getOfflineAccessCode}\n */\n\n/**\n * @typedef GoogleAuthService#LoginResponse\n * @property {GoogleUser} currentUser Current user\n * @property {gapi} gapi Initialized {@link gapi} client\n * @property {boolean} hasGrantedScopes <code>true</code> if the requested scopes were granted.\n * @property {string} [code] Authorization code if <code>grantOfflineAccess: true</code>\n */\n\n/**\n * Signs in the user and initializes session.\n *\n * @method GoogleAuthService#login\n * @see [GoogleAuth.signIn]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthsignin}\n *\n * @param {GoogleAuthService#LoginOptions} [options]\n *\n * @return {Promise<GoogleAuthService#LoginResponse>}\n */\nGoogleAuthService.prototype.login = function login () {\n    var this$1$1 = this;\n\n  return this.clientProvider.getClient().then(function (ref) {\n      var gapi = ref.gapi;\n      var authInstance = ref.authInstance;\n\n    return authInstance.signIn().then(function (currentUser) {\n      this$1$1.sessionStorage.set(sessionFromCurrentUser(currentUser));\n\n      return {\n        currentUser: currentUser,\n        gapi: gapi,\n        hasGrantedScopes: this$1$1.hasGrantedRequestedScopes(currentUser),\n      }\n    })\n  })\n};\n\n/**\n * Forces a refresh of the access token.\n *\n * This should be placed in your App.vue on the created page and run on a timer of 45min.\n *\n * @method GoogleAuthService#refreshToken\n * @see [GoogleUser.reloadAuthResponse]{@link https://developers.google.com/identity/sign-in/web/reference#googleuserreloadauthresponse}\n *\n * @return {Promise<AuthResponse>}\n *\n * @example\n * <script>\n *   name: 'App'\n *\n *   created () {\n *   try {\n *     // NOTE: 45min refresh policy is what google recommends\n *     window.setInterval(this.$gapi.refreshToken(), 2.7e+6)\n *   } catch (e) {\n *     console.error(e)\n *   }\n *\n * }\n * </script>\n */\nGoogleAuthService.prototype.refreshToken = function refreshToken () {\n    var this$1$1 = this;\n\n  return this.getCurrentUser()\n    .then(function (currentUser) { return currentUser.reloadAuthResponse(); })\n    .then(function (authResponse) {\n      this$1$1.sessionStorage.set(Object.assign({}, this$1$1.sessionStorage.get(),\n        sessionFromAuthResponse(authResponse)));\n\n      return authResponse\n    })\n};\n\n/**\n * Ask to grant scopes from user.\n *\n * @method GoogleAuthService#grant\n * @see [GoogleUser.grant]{@link https://developers.google.com/identity/sign-in/web/reference#googleusergrantoptions}\n * @since 0.4.0\n *\n * @return {Promise<GoogleAuthService#GoogleUser>}\n */\nGoogleAuthService.prototype.grant = function grant () {\n    var this$1$1 = this;\n\n  return this.getCurrentUser().then(function (currentUser) {\n    if (this$1$1.hasGrantedRequestedScopes(currentUser)) {\n      return currentUser\n    }\n\n    var ref = this$1$1.clientProvider.getClientConfig();\n      var scope = ref.scope;\n\n    return currentUser.grant({ scope: scope }).then(function () { return currentUser; })\n  })\n};\n\n/**\n * Signs out the current account from the application and clear session storage.\n *\n * @method GoogleAuthService#logout\n * @see [GoogleAuth.signOut]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthsignout}\n *\n * @return {Promise}\n */\nGoogleAuthService.prototype.logout = function logout () {\n    var this$1$1 = this;\n\n  return this.getAuthInstance()\n    .then(function (authInstance) { return authInstance.signOut(); })\n    .then(function () { return this$1$1.sessionStorage.clear(); })\n};\n\n/**\n * Determines if the user is signed in via local storage.\n *\n * @method GoogleAuthService#isAuthenticated\n * @since 0.0.10\n * @return {boolean}\n */\nGoogleAuthService.prototype.isAuthenticated = function isAuthenticated () {\n  return new Date().getTime() < this.sessionStorage.getItem('expiresAt')\n};\n\n/**\n * Determines if the user is signed in via Google.\n *\n * @method GoogleAuthService#isSignedIn\n * @see [GoogleUser.isSignedIn]{@link https://developers.google.com/identity/sign-in/web/reference#googleuserissignedin}\n * @since 0.0.10\n *\n * @return {Promise<boolean>}\n */\nGoogleAuthService.prototype.isSignedIn = function isSignedIn () {\n  return this.getCurrentUser().then(function (currentUser) { return currentUser.isSignedIn(); })\n};\n\n/**\n * Accept the callback to be notified when the authentication status changes.\n *\n * @method GoogleAuthService#listenUserSignIn\n * @see [GoogleAuth.isSignedIn.listen]{@link https://developers.google.com/identity/sign-in/web/reference#googleauthissignedinlistenlistener}\n * @since 0.0.10\n *\n * @param {function} callback\n * the callback function to be notified of an authentication status change\n *\n * @return {Promise<void>}\n */\nGoogleAuthService.prototype.listenUserSignIn = function listenUserSignIn (callback) {\n  return this.getAuthInstance().then(function (authInstance) {\n    callback(authInstance.currentUser.get().isSignedIn());\n    authInstance.isSignedIn.listen(callback);\n  })\n};\n\n/**\n * @typedef {object} GoogleAuthService#UserData\n *\n * @see [gapi.auth2.AuthResponse]{@link https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse}\n * @see [GoogleUser.getBasicProfile]{@link https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile}\n *\n * @property {string} id user's unique ID string\n * @property {string} firstName given name\n * @property {string} lastName family name\n * @property {string} fullName full name\n * @property {string} email\n * @property {string} imageUrl\n * @property {number} expiresAt\n * @property {string} accessToken granted access token\n * @property {string} idToken granted ID token\n * @property {string} [offlineAccessCode]\n */\n\n/**\n * Gets the user data from local storage\n *\n * @method GoogleAuthService#getUserData\n * @since 0.0.10\n *\n * @return {GoogleAuthService#UserData|null}\n */\nGoogleAuthService.prototype.getUserData = function getUserData () {\n  return this.sessionStorage.get()\n};\n\nvar LOCAL_STORAGE_KEY = 'gapi.session';\n\nvar SessionStorage = function SessionStorage(localStorage) {\n  if ( localStorage === void 0 ) localStorage = window.localStorage;\n\n  this.localStorage = localStorage;\n};\n\nSessionStorage.prototype.set = function set (session) {\n  this.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(session));\n};\n\nSessionStorage.prototype.setItem = function setItem (key, value) {\n  var session = this.get() || {};\n  session[key] = value;\n  this.set(session);\n};\n\nSessionStorage.prototype.get = function get () {\n  return JSON.parse(this.localStorage.getItem(LOCAL_STORAGE_KEY))\n};\n\nSessionStorage.prototype.getItem = function getItem (key) {\n  var session = this.get() || {};\n\n  return session[key]\n};\n\nSessionStorage.prototype.clear = function clear () {\n  this.localStorage.removeItem(LOCAL_STORAGE_KEY);\n};\n\n/**\n * @class Vue\n */\n\n/** @module vue-gapi */\n\n/**\n * <code>gapi.client.init</code> configuration parameters.\n *\n * @typedef {object} Options\n * @static\n * @see [gapi.client.init]{@link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md#----gapiclientinitargs--}\n *\n * @property {string} [apiKey] The API Key to use\n * @property {string[]} [discoveryDocs] An array of discovery doc URLs or discovery doc JSON objects\n * @property {string} [clientId] The app's client ID, found and created in the Google Developers Console\n * @property {string} [scope] The scopes to request, as a space-delimited string\n */\n\nvar index = {\n  /**\n   * @param {Vue} Vue Vue constructor\n   * @param {module:vue-gapi.Options} clientConfig VueGapi plugin options\n   * @see [Using a Plugin]{@link https://vuejs.org/v2/guide/plugins.html#Using-a-Plugin}\n   */\n  install: function (Vue, clientConfig) {\n    var clientProvider = new GapiClientProvider(clientConfig);\n    var sessionStorage = new SessionStorage();\n\n    /**\n     * @memberof Vue\n     * @member {GoogleAuthService}\n     */\n    Vue.prototype.$gapi = new GoogleAuthService(clientProvider, sessionStorage);\n  },\n};\n\nvar version = '1.1.1';\n\nexports['default'] = index;\nexports.version = version;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}