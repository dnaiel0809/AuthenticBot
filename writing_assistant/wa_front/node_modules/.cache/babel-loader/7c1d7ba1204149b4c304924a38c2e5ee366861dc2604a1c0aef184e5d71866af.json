{"ast":null,"code":"/* eslint-disable */\nimport VueRouter from 'vue-router';\nimport WritingAssitant from \"@/components/WritingAssitant\";\nimport LoginPage from \"@/components/LoginPage\";\nconst router = new VueRouter({\n  routes: [{\n    path: \"/\",\n    component: LoginPage\n  }, {\n    path: \"/login\",\n    component: LoginPage\n  }, {\n    path: \"/writing_assistant\",\n    component: WritingAssitant\n  }]\n});\n\n//路由守卫，守卫 writing_assistant\nrouter.beforeEach((to, from, next) => {\n  if (to.path === '/writing_assistant') {\n    // 如果即将进入的是 '/writing_assistant' 路由\n    const sessionData = sessionStorage.getItem('username'); // 通过 'yourItem' 取得 sessionStorage 中的项\n\n    if (!sessionData) {\n      // 如果该项不存在\n      next('/login'); // 重定向到登录页面\n    } else {\n      // 如果该项存在\n      next(); // 正常跳转\n    }\n  } else {\n    // 对于其它路由\n    next(); // 总是允许正常跳转\n  }\n});\n\nexport default router;","map":{"version":3,"names":["VueRouter","WritingAssitant","LoginPage","router","routes","path","component","beforeEach","to","from","next","sessionData","sessionStorage","getItem"],"sources":["/Users/lee/Downloads/writing_assistant/wa_front/src/router/index.js"],"sourcesContent":["/* eslint-disable */\nimport VueRouter from 'vue-router'\nimport WritingAssitant from \"@/components/WritingAssitant\";\nimport LoginPage from \"@/components/LoginPage\";\n\nconst router = new VueRouter({\n    routes: [{\n            path: \"/\",\n            component: LoginPage\n        },\n        {\n            path: \"/login\",\n            component: LoginPage\n        },\n\n        {\n            path:\"/writing_assistant\",\n            component:WritingAssitant\n        },\n    ]\n});\n\n//路由守卫，守卫 writing_assistant\nrouter.beforeEach((to, from, next) => {\n    if (to.path === '/writing_assistant') {   // 如果即将进入的是 '/writing_assistant' 路由\n        const sessionData = sessionStorage.getItem('username');   // 通过 'yourItem' 取得 sessionStorage 中的项\n\n        if (!sessionData) {   // 如果该项不存在\n            next('/login');   // 重定向到登录页面\n        } else {   // 如果该项存在\n            next();   // 正常跳转\n        }\n    } else {   // 对于其它路由\n        next();   // 总是允许正常跳转\n    }\n});\n\n\nexport default router;"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,MAAMC,MAAM,GAAG,IAAIH,SAAS,CAAC;EACzBI,MAAM,EAAE,CAAC;IACDC,IAAI,EAAE,GAAG;IACTC,SAAS,EAAEJ;EACf,CAAC,EACD;IACIG,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAEJ;EACf,CAAC,EAED;IACIG,IAAI,EAAC,oBAAoB;IACzBC,SAAS,EAACL;EACd,CAAC;AAET,CAAC,CAAC;;AAEF;AACAE,MAAM,CAACI,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,IAAIF,EAAE,CAACH,IAAI,KAAK,oBAAoB,EAAE;IAAI;IACtC,MAAMM,WAAW,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAG;;IAE1D,IAAI,CAACF,WAAW,EAAE;MAAI;MAClBD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAG;IACtB,CAAC,MAAM;MAAI;MACPA,IAAI,CAAC,CAAC,CAAC,CAAG;IACd;EACJ,CAAC,MAAM;IAAI;IACPA,IAAI,CAAC,CAAC,CAAC,CAAG;EACd;AACJ,CAAC,CAAC;;AAGF,eAAeP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}