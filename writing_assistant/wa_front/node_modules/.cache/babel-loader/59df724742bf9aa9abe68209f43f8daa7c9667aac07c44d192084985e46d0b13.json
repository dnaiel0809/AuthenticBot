{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\nexport default {\n  name: \"PreSurvey\",\n  components: {\n    // VueMarkdown,\n    // EasyMDE,\n    // VueSimpleRangeSlider,\n  },\n  mounted() {\n    // fetch(\"/prompt.json\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.prompts = data.prompts;\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    // });\n    // this.scrollToTop();\n    // this.enableEditMode();\n\n    // this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      // sliderBool: false,\n      generateBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      Prompt: \"Please write the support message that responses to the post according to the user's attitude.\",\n      seeking_post: \"Would you report a coworker who doesn't work or would you just leave them alone? \\n\\\n          I'll give a fake example:\\n\\\n          I'm a web developer at a company. I set my Skype status to busy\\\n              24/7. Also, if anyone messages me I basically always say I need to\\\n              get back to them because I'm busy. Then, I don't message them back\\\n              to try to get back in touch with them. What I'm truly doing is\\\n              surfing the internet for fun or playing games for fun about 90\\\n              percent of the time. I make very minor changes to websites I work\\\n              on and say I need like 10x the amount of time that I truly need.\\n\\\n              If I was you're coworker and you saw this, would you be reporting\\\n              me, leaving me alone, or would you be doing something else?\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownEditor2: null,\n      markdownOutputEditor: null,\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"\",\n      style2: \"\",\n      style3: \"\",\n      last_value1: 50,\n      last_value2: 50,\n      last_value3: 50,\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"]\n    };\n  },\n  methods: {\n    scrollToTop() {\n      window.scrollTo(0, 2);\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http.post(\"/delete_prompt/\", {\n        content: content,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"delete successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.stylePrompt = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\"\n      });\n    },\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n    editCurPrompt() {\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        output.textContent = this.selectContent;\n      });\n    },\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n    async saveMyPrompt() {\n      http.post(\"/save_prompt/\", {\n        content: this.selectContent,\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"save prompt res\", res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"save prompt changes successfully!\");\n          console.log(\"save successfully\");\n        } else {\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        }\n      }).catch(e => {\n        console.log(e);\n        this.messagePop(\"error\", \"fail to save prompt changes\");\n      });\n    },\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http.post(\"/get_prompt/\", {\n        person: sessionStorage.getItem(\"username\")\n      }).then(res => {\n        console.log(\"get successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getWrtingAssistantHelp() {\n      this.loading = true;\n      this.generateBool = true;\n      let prompt = `[Help-seeking post]\\n \n                    ${this.seeking_post}\\n\n                    [User\\'s attitude]\\n\n                    ${this.inputText}\\n\n                    [Task]\n                    ${this.Prompt}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post(\"/writing_assistant/\", {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.outputText = res.data.content;\n        this.markdownOutputEditor.value(this.outputText);\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    submitWriting() {\n      this.jumpyTo(\"/writing_assistant\");\n    },\n    toAttitudinal() {\n      this.jumpyTo(\"/attitude_input\");\n    },\n    toExperiential() {\n      this.jumpyTo(\"/experiential_input\");\n    },\n    toStyleLearning() {\n      this.jumpyTo(\"/writing_assistant\");\n    }\n  }\n};","map":{"version":3,"names":["http","VueMarkdown","EasyMDE","VueSimpleRangeSlider","Vue","BootstrapVue","IconsPlugin","use","name","components","mounted","data","testData","edit","p_edit","generateBool","markdownContent","prompts","my_prompts","drawer","my_drawer","direction","Prompt","seeking_post","beforeEdit","inputText","inputText2","outputText","models","selectedItem","editMode","m_outputText","markdownEditor","markdownEditor2","markdownOutputEditor","loading","value1","value2","value3","style1","style2","style3","last_value1","last_value2","last_value3","currentTab","tabs","methods","scrollToTop","window","scrollTo","jumpyTo","url","$router","currentRoute","path","push","messagePop","type","message","$message","enableEditMode","vm","$nextTick","element","$refs","codemirrorScroll","document","getElementsByClassName","console","log","style","maxHeight","overflowY","codemirror","on","value","enableOutputEditMode","markdown","markdownEditorOutput","setOption","copyText","$set","confirmDelete","content","post","person","sessionStorage","getItem","then","res","catch","e","savePromptChange","stylePrompt","getElementById","textContent","contentEditable","saveMyPrompt","showSlider","sliderBool","startEdit","output","saveChange","selectItem","selectContent_","selectContent","editCurPrompt","cancelPromptChange","mySelectContent_","success","getMyPrompt","getWrtingAssistantHelp","prompt","model","submitWriting","toAttitudinal","toExperiential","toStyleLearning"],"sources":["src/components/PreSurvey.vue"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n<template>\n  <div class=\"container\">\n    <iframe\n      src=\"https://nus.syd1.qualtrics.com/jfe/form/SV_5jonjUVMCIuHiiq\"\n      width=\"100%\"\n      height=\"1300px\"\n    ></iframe>\n    <b-row align-self=\"center\"\n      ><center>\n        <el-button @click=\"submitWriting\" type=\"primary\">Next page</el-button>\n      </center></b-row\n    >\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nimport Vue from \"vue\";\nimport { BootstrapVue, IconsPlugin } from \"bootstrap-vue\";\n\n// Import Bootstrap and BootstrapVue CSS files (order is important)\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-vue/dist/bootstrap-vue.css\";\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue);\n\nexport default {\n  name: \"PreSurvey\",\n  components: {\n    // VueMarkdown,\n    // EasyMDE,\n    // VueSimpleRangeSlider,\n  },\n\n  mounted() {\n    // fetch(\"/prompt.json\")\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.prompts = data.prompts;\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    // });\n    // this.scrollToTop();\n    // this.enableEditMode();\n\n    // this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n  data() {\n    return {\n      testData: \"\",\n      edit: false,\n      p_edit: false,\n      // sliderBool: false,\n      generateBool: false,\n      markdownContent: \"\",\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: \"rtl\",\n      Prompt:\n        \"Please write the support message that responses to the post according to the user's attitude.\",\n\n      seeking_post:\n        \"Would you report a coworker who doesn't work or would you just leave them alone? \\n\\\n          I'll give a fake example:\\n\\\n          I'm a web developer at a company. I set my Skype status to busy\\\n              24/7. Also, if anyone messages me I basically always say I need to\\\n              get back to them because I'm busy. Then, I don't message them back\\\n              to try to get back in touch with them. What I'm truly doing is\\\n              surfing the internet for fun or playing games for fun about 90\\\n              percent of the time. I make very minor changes to websites I work\\\n              on and say I need like 10x the amount of time that I truly need.\\n\\\n              If I was you're coworker and you saw this, would you be reporting\\\n              me, leaving me alone, or would you be doing something else?\",\n      beforeEdit: \"\",\n      inputText: \"\",\n      inputText2: \"\",\n\n      outputText: \"\",\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: [\"gpt-3.5-turbo\", \"gpt-3.5-turbo-16k\"],\n      selectedItem: \"gpt-3.5-turbo\",\n\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownEditor2: null,\n      markdownOutputEditor: null,\n\n      loading: false,\n      value1: 50,\n      value2: 50,\n      value3: 50,\n      style1: \"\",\n      style2: \"\",\n      style3: \"\",\n      last_value1: 50,\n      last_value2: 50,\n      last_value3: 50,\n\n      currentTab: \"Home\",\n      tabs: [\"Home\", \"Posts\", \"Archive\"],\n    };\n  },\n\n  methods: {\n    scrollToTop() {\n      window.scrollTo(0, 2);\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n\n    enableEditMode() {\n      this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput,\n          });\n          this.markdownOutputEditor.codemirror.setOption(\"readOnly\", true);\n          //设计样式\n          const codemirrorScroll =\n            document.getElementsByClassName(\"CodeMirror-scroll\")[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = \"400px\";\n            codemirrorScroll.style.overflowY = \"auto\";\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, \"inputText\", this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http\n        .post(\"/delete_prompt/\", {\n          content: content,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"delete successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.stylePrompt = document.getElementById(\"editPromptBox\").textContent;\n      document.getElementById(\"editPromptBox\").contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n\n    async showSlider() {\n      this.sliderBool = true;\n      //  加入到 drawer 自己修改的 prompt 中\n      // await this.saveMyPrompt();\n    },\n\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"outputArea\");\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById(\"outputArea\").textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById(\"outputArea\").contentEditable = false;\n      this.edit = false;\n\n      this.$message({\n        message: \"successfully save changes\",\n        type: \"success\",\n      });\n    },\n\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n\n    editCurPrompt() {\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        output.textContent = this.selectContent;\n      });\n    },\n\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById(\"editPromptBox\");\n        this.p_edit = false;\n        document.getElementById(\"editPromptBox\").contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n\n    async saveMyPrompt() {\n      http\n        .post(\"/save_prompt/\", {\n          content: this.selectContent,\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"save prompt res\", res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"save prompt changes successfully!\");\n            console.log(\"save successfully\");\n          } else {\n            this.messagePop(\"error\", \"fail to save prompt changes\");\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.messagePop(\"error\", \"fail to save prompt changes\");\n        });\n    },\n\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http\n        .post(\"/get_prompt/\", {\n          person: sessionStorage.getItem(\"username\"),\n        })\n        .then((res) => {\n          console.log(\"get successfully\");\n          this.my_prompts = res.data.prompts;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    getWrtingAssistantHelp() {\n      this.loading = true;\n      this.generateBool = true;\n\n      let prompt = `[Help-seeking post]\\n \n                    ${this.seeking_post}\\n\n                    [User\\'s attitude]\\n\n                    ${this.inputText}\\n\n                    [Task]\n                    ${this.Prompt}\\n\n                    [RESULT]\\n\\n`;\n\n      console.log(\"提交的数据是：\", prompt);\n      http\n        .post(\"/writing_assistant/\", {\n          prompt: prompt,\n          model: this.selectedItem,\n        })\n        .then((res) => {\n          this.loading = false;\n          this.outputText = res.data.content;\n          this.markdownOutputEditor.value(this.outputText);\n          console.log(\"output Text:\", res.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    submitWriting() {\n      this.jumpyTo(\"/writing_assistant\");\n    },\n\n    toAttitudinal() {\n      this.jumpyTo(\"/attitude_input\");\n    },\n    toExperiential() {\n      this.jumpyTo(\"/experiential_input\");\n    },\n    toStyleLearning() {\n      this.jumpyTo(\"/writing_assistant\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  background: white;\n  width: 90%;\n  height: 4000px;\n  margin: auto;\n}\n.header {\n  margin-left: 4em;\n  /*margin-top: 4em;*/\n  padding-top: 4em;\n  display: flex;\n}\n\n.button {\n  /*width: 100px;*/\n  width: 10%;\n}\n\n.drop-item {\n  /*width: 500px;*/\n  font-family: ColfaxAI, helvetica, sans-serif;\n  font-size: small;\n  /*white-space: normal;*/\n  /*word-wrap: break-word;*/\n}\n\n.translate-container {\n  padding: 20px;\n}\n\n.grid-content {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post2 {\n  height: 500px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.slider-content {\n  height: 450px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n  padding-right: 4em;\n}\n\n.bg-light {\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.textarea {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 550px;\n\n  /*font-family: 'Arial', sans-serif; !* 这将更改字体 *!*/\n  font-family: \"Roboto\", sans-serif;\n  font-size: 16px; /* 这将更改字体大小 */\n  color: #333; /* 这将更改文本颜色 */\n  line-height: 1.5; /* 这将更改行高 */\n  letter-spacing: 0.05em; /* 这将更改字符间距 */\n  text-align: justify; /* 这将使文本两端对齐 */\n  overflow-y: scroll;\n}\n\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n.el-menu-item i {\n  float: right;\n  margin-top: 5px;\n  cursor: pointer;\n}\n\n.example {\n  background: #ffffff;\n  margin: 20px;\n  border-color: #e7e7e7;\n  padding: 40px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}