{"ast":null,"code":"import axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nconst service = axios.create({\n  // baseURL: 'http://localhost:50000/', // 你的服务器的 url，如果服务器运行在其他端口，请修改这个部分\n  baseURL: 'https://authentic-web-backend-3f378cc1ac7f.herokuapp.com/',\n  timeout: 100000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => response, error => {\n  console.log('err' + error); // 打印出错误信息\n  return Promise.reject(error);\n});\nfunction getData() {\n  return service.get('/?min=0&max=100');\n}\n\n// create a promise that resolves after a short delay\nfunction delayPromise(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\n// cb is the callback function\n// interval is how often to poll\n// timeout is how long to poll waiting for a result (0 means try forever)\nfunction poll(cb, predicate, errorHandler, interval, timeout) {\n  let start = Date.now();\n  function run() {\n    return cb().then(function ({\n      data\n    }) {\n      console.log('data:', data);\n      if (predicate(data)) {\n        // we know we're done here, return from here whatever you\n        // want the final resolved value of the promise to be\n        return data;\n      } else {\n        if (timeout !== 0 && Date.now() - start > timeout) {\n          errorHandler();\n        } else {\n          // run again with a short delay\n          return delayPromise(interval).then(run);\n        }\n      }\n    });\n  }\n  return run();\n}\nfunction isGreaterThan90([number]) {\n  return number.random > 90;\n}\nfunction errorHandler() {\n  throw new Error('timeout error on poll');\n}\nfunction logResult(data) {\n  data = JSON.stringify(data, null, 2);\n  console.log(`result: ${data}`);\n}\npoll(getData, isGreaterThan90, errorHandler, 1000, 30 * 1000).then(logResult).catch(console.error);\nexport default service;","map":{"version":3,"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","service","create","baseURL","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","getData","get","delayPromise","ms","resolve","setTimeout","poll","cb","predicate","errorHandler","interval","start","Date","now","run","then","data","isGreaterThan90","number","random","Error","logResult","JSON","stringify","catch"],"sources":["/Users/lee/Downloads/writing_assistant/wa_front/src/http.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\n\n\nconst service = axios.create({\n    // baseURL: 'http://localhost:50000/', // 你的服务器的 url，如果服务器运行在其他端口，请修改这个部分\n    baseURL: 'https://authentic-web-backend-3f378cc1ac7f.herokuapp.com/',\n    timeout: 100000, // 请求超时时间\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n        // 在发送请求之前做些什么\n        return config\n    },\n    error => {\n        // 对请求错误做些什么\n        console.log(error)\n        return Promise.reject(error)\n    }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n    response => response,\n    error => {\n        console.log('err' + error) // 打印出错误信息\n        return Promise.reject(error)\n    }\n)\n\n\n\n\nfunction getData() {\n    return service.get('/?min=0&max=100');\n}\n\n// create a promise that resolves after a short delay\nfunction delayPromise(ms) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, ms);\n    });\n}\n\n// cb is the callback function\n// interval is how often to poll\n// timeout is how long to poll waiting for a result (0 means try forever)\nfunction poll(cb, predicate, errorHandler, interval, timeout) {\n    let start = Date.now();\n\n    function run() {\n        return cb().then(function ({ data }) {\n            console.log('data:', data);\n            if (predicate(data)) {\n                // we know we're done here, return from here whatever you\n                // want the final resolved value of the promise to be\n                return data;\n            } else {\n                if (timeout !== 0 && Date.now() - start > timeout) {\n                    errorHandler();\n                } else {\n                    // run again with a short delay\n                    return delayPromise(interval).then(run);\n                }\n            }\n        });\n    }\n    return run();\n}\n\nfunction isGreaterThan90([number]) {\n    return number.random > 90;\n}\n\nfunction errorHandler() {\n    throw new Error('timeout error on poll');\n}\n\nfunction logResult(data) {\n    data = JSON.stringify(data, null, 2);\n    console.log(`result: ${data}`);\n}\n\npoll(getData, isGreaterThan90, errorHandler, 1000, 30 * 1000)\n    .then(logResult)\n    .catch(console.error);\n\nexport default service\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,cAAc,GAAG,WAAW;AAC3CF,KAAK,CAACC,QAAQ,CAACE,cAAc,GAAG,aAAa;AAI7C,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EACzB;EACAC,OAAO,EAAE,2DAA2D;EACpEC,OAAO,EAAE,MAAM,CAAE;AACrB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACN;EACA,OAAOA,MAAM;AACjB,CAAC,EACDC,KAAK,IAAI;EACL;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAR,OAAO,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7BO,QAAQ,IAAIA,QAAQ,EACpBL,KAAK,IAAI;EACLC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC,EAAC;EAC3B,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAKD,SAASM,OAAOA,CAAA,EAAG;EACf,OAAOd,OAAO,CAACe,GAAG,CAAC,iBAAiB,CAAC;AACzC;;AAEA;AACA,SAASC,YAAYA,CAACC,EAAE,EAAE;EACtB,OAAO,IAAIN,OAAO,CAAC,UAAUO,OAAO,EAAE;IAClCC,UAAU,CAACD,OAAO,EAAED,EAAE,CAAC;EAC3B,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA,SAASG,IAAIA,CAACC,EAAE,EAAEC,SAAS,EAAEC,YAAY,EAAEC,QAAQ,EAAErB,OAAO,EAAE;EAC1D,IAAIsB,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAEtB,SAASC,GAAGA,CAAA,EAAG;IACX,OAAOP,EAAE,CAAC,CAAC,CAACQ,IAAI,CAAC,UAAU;MAAEC;IAAK,CAAC,EAAE;MACjCrB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEoB,IAAI,CAAC;MAC1B,IAAIR,SAAS,CAACQ,IAAI,CAAC,EAAE;QACjB;QACA;QACA,OAAOA,IAAI;MACf,CAAC,MAAM;QACH,IAAI3B,OAAO,KAAK,CAAC,IAAIuB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,KAAK,GAAGtB,OAAO,EAAE;UAC/CoB,YAAY,CAAC,CAAC;QAClB,CAAC,MAAM;UACH;UACA,OAAOP,YAAY,CAACQ,QAAQ,CAAC,CAACK,IAAI,CAACD,GAAG,CAAC;QAC3C;MACJ;IACJ,CAAC,CAAC;EACN;EACA,OAAOA,GAAG,CAAC,CAAC;AAChB;AAEA,SAASG,eAAeA,CAAC,CAACC,MAAM,CAAC,EAAE;EAC/B,OAAOA,MAAM,CAACC,MAAM,GAAG,EAAE;AAC7B;AAEA,SAASV,YAAYA,CAAA,EAAG;EACpB,MAAM,IAAIW,KAAK,CAAC,uBAAuB,CAAC;AAC5C;AAEA,SAASC,SAASA,CAACL,IAAI,EAAE;EACrBA,IAAI,GAAGM,IAAI,CAACC,SAAS,CAACP,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EACpCrB,OAAO,CAACC,GAAG,CAAE,WAAUoB,IAAK,EAAC,CAAC;AAClC;AAEAV,IAAI,CAACN,OAAO,EAAEiB,eAAe,EAAER,YAAY,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,CACxDM,IAAI,CAACM,SAAS,CAAC,CACfG,KAAK,CAAC7B,OAAO,CAACD,KAAK,CAAC;AAEzB,eAAeR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}