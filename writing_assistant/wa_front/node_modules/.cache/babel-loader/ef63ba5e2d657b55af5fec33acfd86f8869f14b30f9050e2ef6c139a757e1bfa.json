{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport http from \"@/http\";\n// import axios from \"axios\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\"\n        // password: '',\n      }\n    };\n  },\n\n  mounted() {\n    let vm = this;\n    vm.login();\n    this.login();\n  },\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: {\n            Pid: this.username,\n            condition: this.condition\n          }\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      this.Pid = urlParams.get(\"PROLIFIC_PID\");\n      console.log(\"ID: \", this.Pid);\n\n      // const [hash, query] = url.split('#')[1].split('?')\n      // const params = Object.fromEntries(new URLSearchParams(query))\n      // this.Pid = params.PROLIFIC_PID;\n      // this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n    login() {\n      let vm = this;\n      this.$getGapiClient().then(gapi => {\n        var params = {\n          spreadsheetId: \"1MqxGqjG4HCXFjfSX5e27bFgew3tqpsTXdiaBGoZlRfY\",\n          range: \"time\",\n          valueRenderOption: \"FORMATTED_VALUE\",\n          dateTimeRenderOption: \"FORMATTED_STRING\"\n        };\n        var request = gapi.client.sheets.spreadsheets.values.get(params);\n        request.then(function (response) {\n          console.log(response.result);\n        }, function (reason) {\n          console.error(\"error:\", reason);\n        });\n      });\n    },\n    // login() {\n    //   // Handle login logic here\n    //   // console.log(this.form);\n    //   http.post('/login/',{\n    //     name: this.form.username,\n    //     pwd: this.form.password,\n    //   }).then(res => {\n    //     console.log('successfully login')\n    //     console.log(res)\n    //     sessionStorage.setItem('username', this.form.username)\n    //     this.messagePop('success', \"successfully login!!\")\n    //     this.jumpyTo(\"/writing_assistant\")\n    //   //  同时也可以在后端为 single_fileupload 创建一个文件夹\n    //   //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n    //   }).catch(e=>{\n    //     console.log(\"login\", e)\n    //     this.messagePop('error', \"login error, wrong username or password\")\n    //   })\n    // },\n\n    async signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      await http.post(\"/signup/\", {\n        name: this.form.username\n        // pwd: this.form.password,\n      }).then(res => {\n        console.log(\"successfully sign up\");\n        console.log(res);\n        if (res.data.success) {\n          this.messagePop(\"success\", \"successfully sign up\");\n          sessionStorage.setItem(\"username\", this.form.username);\n          this.condition = res.data.condition;\n          this.jumpyTo(\"/pre_survey\");\n        } else {\n          this.messagePop(\"error\", \"please try another username\");\n        }\n      }).catch(e => {\n        console.log(\"sign up error\", e);\n        this.messagePop(\"error\", \"please try another username\");\n      });\n    }\n  },\n  beforeMount() {\n    this.fetchID();\n  }\n};","map":{"version":3,"names":["http","name","data","form","username","condition","mounted","vm","login","methods","messagePop","type","message","$message","jumpyTo","url","$router","currentRoute","path","console","log","push","query","Pid","fetchID","urlParams","URLSearchParams","window","location","search","get","$getGapiClient","then","gapi","params","spreadsheetId","range","valueRenderOption","dateTimeRenderOption","request","client","sheets","spreadsheets","values","response","result","reason","error","signUp","post","res","success","sessionStorage","setItem","catch","e","beforeMount"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"box-card\">\n      <!-- <div slot=\"header\" class=\"clearfix\"> -->\n      <!--        <span>Login</span>-->\n      <!-- <img src=\"/imgs/ai4sg_logo.png\" alt=\"Logo\" class=\"logo\"> -->\n      <!-- </div> -->\n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Prolific ID\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"Password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item> -->\n        <div class=\"button\">\n          <el-button type=\"primary\" @click=\"signUp\">Login</el-button>\n        </div>\n        <!-- <el-button type=\"primary\" @click=\"signUp\">Sign Up</el-button> -->\n      </el-form>\n    </el-card>\n  </div>\n</template>\n<script src=\"https://apis.google.com/js/platform.js?onload=onLoadCallback\"></script>\n\n<script>\nimport http from \"@/http\";\n// import axios from \"axios\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        condition: \"\",\n        // password: '',\n      },\n    };\n  },\n  mounted() {\n    let vm = this;\n    vm.login();\n    this.login();\n  },\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`,\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        console.log(this.username);\n        this.$router.push({\n          path: url,\n          query: { Pid: this.username, condition: this.condition },\n        });\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      this.Pid = urlParams.get(\"PROLIFIC_PID\");\n      console.log(\"ID: \", this.Pid);\n\n      // const [hash, query] = url.split('#')[1].split('?')\n      // const params = Object.fromEntries(new URLSearchParams(query))\n      // this.Pid = params.PROLIFIC_PID;\n      // this.Pid = this.$route.query.PROLIFIC_PID;\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n\n      this.form.username = this.Pid;\n    },\n\n    login() {\n      let vm = this;\n      this.$getGapiClient().then((gapi) => {\n        var params = {\n          spreadsheetId: \"1MqxGqjG4HCXFjfSX5e27bFgew3tqpsTXdiaBGoZlRfY\",\n          range: \"time\",\n          valueRenderOption: \"FORMATTED_VALUE\",\n          dateTimeRenderOption: \"FORMATTED_STRING\",\n        };\n        var request = gapi.client.sheets.spreadsheets.values.get(params);\n        request.then(\n          function (response) {\n            console.log(response.result);\n          },\n          function (reason) {\n            console.error(\"error:\", reason);\n          }\n        );\n      });\n    },\n\n    // login() {\n    //   // Handle login logic here\n    //   // console.log(this.form);\n    //   http.post('/login/',{\n    //     name: this.form.username,\n    //     pwd: this.form.password,\n    //   }).then(res => {\n    //     console.log('successfully login')\n    //     console.log(res)\n    //     sessionStorage.setItem('username', this.form.username)\n    //     this.messagePop('success', \"successfully login!!\")\n    //     this.jumpyTo(\"/writing_assistant\")\n    //   //  同时也可以在后端为 single_fileupload 创建一个文件夹\n    //   //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n    //   }).catch(e=>{\n    //     console.log(\"login\", e)\n    //     this.messagePop('error', \"login error, wrong username or password\")\n    //   })\n    // },\n\n    async signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      this.username = this.form.username;\n      await http\n        .post(\"/signup/\", {\n          name: this.form.username,\n          // pwd: this.form.password,\n        })\n        .then((res) => {\n          console.log(\"successfully sign up\");\n          console.log(res);\n          if (res.data.success) {\n            this.messagePop(\"success\", \"successfully sign up\");\n            sessionStorage.setItem(\"username\", this.form.username);\n            this.condition = res.data.condition;\n            this.jumpyTo(\"/pre_survey\");\n          } else {\n            this.messagePop(\"error\", \"please try another username\");\n          }\n        })\n        .catch((e) => {\n          console.log(\"sign up error\", e);\n          this.messagePop(\"error\", \"please try another username\");\n        });\n    },\n  },\n  beforeMount() {\n    this.fetchID();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.box-card {\n  width: 30%;\n}\n\n.logo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n}\n\n.button {\n  display: block;\n  margin-left: auto;\n  /* margin-right: auto; */\n  width: 20%;\n}\n</style>"],"mappings":";;;;AAyBA,OAAAA,IAAA;AACA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,SAAA;QACA;MACA;IACA;EACA;;EACAC,QAAA;IACA,IAAAC,EAAA;IACAA,EAAA,CAAAC,KAAA;IACA,KAAAA,KAAA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA,EAAAC,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,KAAAA,OAAA;QACAD,IAAA,KAAAA,IAAA;MACA;IACA;IACAG,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA,KAAAH,GAAA;QACAI,OAAA,CAAAC,GAAA,MAAAhB,QAAA;QACA,KAAAY,OAAA,CAAAK,IAAA;UACAH,IAAA,EAAAH,GAAA;UACAO,KAAA;YAAAC,GAAA,OAAAnB,QAAA;YAAAC,SAAA,OAAAA;UAAA;QACA;MACA;IACA;IACAmB,QAAA;MACA;MACA,MAAAC,SAAA,OAAAC,eAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA,KAAAN,GAAA,GAAAE,SAAA,CAAAK,GAAA;MACAX,OAAA,CAAAC,GAAA,cAAAG,GAAA;;MAEA;MACA;MACA;MACA;MACA;;MAEA,KAAApB,IAAA,CAAAC,QAAA,QAAAmB,GAAA;IACA;IAEAf,MAAA;MACA,IAAAD,EAAA;MACA,KAAAwB,cAAA,GAAAC,IAAA,CAAAC,IAAA;QACA,IAAAC,MAAA;UACAC,aAAA;UACAC,KAAA;UACAC,iBAAA;UACAC,oBAAA;QACA;QACA,IAAAC,OAAA,GAAAN,IAAA,CAAAO,MAAA,CAAAC,MAAA,CAAAC,YAAA,CAAAC,MAAA,CAAAb,GAAA,CAAAI,MAAA;QACAK,OAAA,CAAAP,IAAA,CACA,UAAAY,QAAA;UACAzB,OAAA,CAAAC,GAAA,CAAAwB,QAAA,CAAAC,MAAA;QACA,GACA,UAAAC,MAAA;UACA3B,OAAA,CAAA4B,KAAA,WAAAD,MAAA;QACA,CACA;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA,MAAAE,OAAA;MACA7B,OAAA,CAAAC,GAAA,MAAAjB,IAAA;MACAgB,OAAA,CAAAC,GAAA,MAAAjB,IAAA,CAAAC,QAAA;MACA,KAAAA,QAAA,QAAAD,IAAA,CAAAC,QAAA;MACA,MAAAJ,IAAA,CACAiD,IAAA;QACAhD,IAAA,OAAAE,IAAA,CAAAC;QACA;MACA,GACA4B,IAAA,CAAAkB,GAAA;QACA/B,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAA8B,GAAA;QACA,IAAAA,GAAA,CAAAhD,IAAA,CAAAiD,OAAA;UACA,KAAAzC,UAAA;UACA0C,cAAA,CAAAC,OAAA,kBAAAlD,IAAA,CAAAC,QAAA;UACA,KAAAC,SAAA,GAAA6C,GAAA,CAAAhD,IAAA,CAAAG,SAAA;UACA,KAAAS,OAAA;QACA;UACA,KAAAJ,UAAA;QACA;MACA,GACA4C,KAAA,CAAAC,CAAA;QACApC,OAAA,CAAAC,GAAA,kBAAAmC,CAAA;QACA,KAAA7C,UAAA;MACA;IACA;EACA;EACA8C,YAAA;IACA,KAAAhC,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}