{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\nexport default {\n  name: \"WritingAssitant\",\n  components: {\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider\n  },\n  mounted() {\n    fetch('/prompt.json').then(response => response.json()).then(data => {\n      this.prompts = data.prompts;\n    }).catch(error => {\n      console.log(error);\n    });\n    this.enableEditMode();\n    this.enableOutputEditMode();\n\n    //  检查是否是登录用户\n  },\n\n  data() {\n    return {\n      testData: '',\n      edit: false,\n      p_edit: false,\n      markdownContent: '',\n      prompts: null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: 'rtl',\n      selectContent: '',\n      beforeEdit: '',\n      inputText: '',\n      outputText: '',\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models: ['gpt-3.5-turbo', 'gpt-3.5-turbo-16k'],\n      selectedItem: 'gpt-3.5-turbo',\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n      markdownOutputEditor: null,\n      loading: false,\n      value: 20\n    };\n  },\n  methods: {\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    enableEditMode() {\n      // this.editMode = true;\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          console.log(\"scoll\");\n          console.log(codemirrorScroll);\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = '400px';\n            codemirrorScroll.style.overflowY = 'auto';\n            console.log(\"successfully set\");\n          }\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode() {\n      const vm = this;\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput\n          });\n          this.markdownOutputEditor.codemirror.setOption('readOnly', true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = '400px';\n            codemirrorScroll.style.overflowY = 'auto';\n            console.log(\"successfully set\");\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n    copyText() {\n      this.$set(this, 'inputText', this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText);\n    },\n    async confirmDelete(content) {\n      await http.post('/delete_prompt/', {\n        content: content,\n        person: sessionStorage.getItem('username')\n      }).then(res => {\n        console.log(\"delete successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    async savePromptChange() {\n      console.log(\"触发\");\n      this.selectContent = document.getElementById('editPromptBox').textContent;\n      document.getElementById('editPromptBox').contentEditable = false;\n      this.p_edit = false;\n      //  加入到 drawer 自己修改的 prompt 中\n      await this.saveMyPrompt();\n    },\n    startEdit() {\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById('outputArea');\n        output.textContent = this.outputText;\n      });\n    },\n    saveChange() {\n      this.outputText = document.getElementById('outputArea').textContent;\n      // document.getElementById('outputArea').blur();\n      document.getElementById('outputArea').contentEditable = false;\n      this.edit = false;\n      this.$message({\n        message: 'successfully save changes',\n        type: 'success'\n      });\n    },\n    selectItem(content) {\n      this.selectedItem = content;\n    },\n    selectContent_(content) {\n      this.selectContent = content;\n      this.beforeEdit = content;\n      this.drawer = false;\n    },\n    editCurPrompt() {\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById('editPromptBox');\n        output.textContent = this.selectContent;\n      });\n    },\n    cancelPromptChange() {\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById('editPromptBox');\n        this.p_edit = false;\n        document.getElementById('editPromptBox').contentEditable = false;\n        output.textContent = this.beforeEdit;\n      });\n    },\n    mySelectContent_(content) {\n      this.selectContent = content;\n      console.log(this.selectContent);\n      this.beforeEdit = content;\n      this.my_drawer = false;\n    },\n    async saveMyPrompt() {\n      http.post('/save_prompt/', {\n        content: this.selectContent,\n        person: sessionStorage.getItem('username')\n      }).then(res => {\n        console.log(\"save prompt res\", res);\n        if (res.data.success) {\n          this.messagePop('success', \"save prompt changes successfully!\");\n          console.log(\"save successfully\");\n        } else {\n          this.messagePop('error', 'fail to save prompt changes');\n        }\n      }).catch(e => {\n        console.log(e);\n        this.messagePop('error', 'fail to save prompt changes');\n      });\n    },\n    async getMyPrompt() {\n      this.my_drawer = true;\n      http.post('/get_prompt/', {\n        person: sessionStorage.getItem('username')\n      }).then(res => {\n        console.log(\"get successfully\");\n        this.my_prompts = res.data.prompts;\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getWrtingAssistantHelp() {\n      this.loading = true;\n      let prompt = `[Paragraph]\\n\n                    ${this.inputText}\\n\n                    [TASK]\\n\n                    ${this.selectContent}\\n\n                    [RESULT]\\n\\n`;\n      console.log(\"提交的数据是：\", prompt);\n      http.post('/writing_assistant/', {\n        prompt: prompt,\n        model: this.selectedItem\n      }).then(res => {\n        this.loading = false;\n        this.outputText = res.data.content;\n        this.markdownOutputEditor.value(this.outputText);\n        console.log(\"output Text:\", res.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    refreshDrawer() {\n      this.drawer = true;\n    }\n  }\n};","map":{"version":3,"names":["http","VueMarkdown","EasyMDE","VueSimpleRangeSlider","name","components","mounted","fetch","then","response","json","data","prompts","catch","error","console","log","enableEditMode","enableOutputEditMode","testData","edit","p_edit","markdownContent","my_prompts","drawer","my_drawer","direction","selectContent","beforeEdit","inputText","outputText","models","selectedItem","editMode","m_outputText","markdownEditor","markdownOutputEditor","loading","value","methods","jumpyTo","url","$router","currentRoute","path","push","messagePop","type","message","$message","vm","$nextTick","element","$refs","codemirrorScroll","document","getElementsByClassName","style","maxHeight","overflowY","codemirror","on","markdown","markdownEditorOutput","setOption","copyText","$set","confirmDelete","content","post","person","sessionStorage","getItem","res","e","savePromptChange","getElementById","textContent","contentEditable","saveMyPrompt","startEdit","output","saveChange","selectItem","selectContent_","editCurPrompt","cancelPromptChange","mySelectContent_","success","getMyPrompt","getWrtingAssistantHelp","prompt","model","refreshDrawer"],"sources":["/Users/lee/Downloads/writing_assistant/wa_front/src/components/WritingAssitant.vue"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n\n\n<template>\n  <div class=\"container\">\n    <div style=\"display: flex\">\n      <!-- 选择原生的 prompt 部分  -->\n<!--      <el-button @click=\"drawer = true\" type=\"primary\" style=\"margin-top: 4em; margin-left: 5em;\"-->\n<!--                 v-if=\"!selectContent\">-->\n        <el-button @click=\"drawer = true\" type=\"primary\" style=\"margin-top: 4em; margin-left: 5em; margin-right: 1em\">\n<!--        Select Prompts-->\n        System Prompts\n      </el-button>\n\n<!--      <div v-else style=\" display: flex\">-->\n      <div v-if=\"selectContent\" style=\" display: flex\">\n        <!-- 选择完毕之后出现可编辑的框 -->\n        <div v-if=\"!p_edit\" style=\"width: 500px; padding-left: 2em; padding-top: 2em; padding-right: 2em; border: 3px solid lightskyblue\">{{selectContent}}</div>\n        <div v-else id=\"editPromptBox\" v-html=\"selectContent\"\n             style=\"width: 500px; padding-left: 2em; padding-top: 2em; padding-right: 2em\"\n             :contenteditable=\"p_edit\">\n        </div>\n\n          <!--点击 \"编辑\"， 或者 \"确定\"来完成编辑-->\n        <el-button @click=\"editCurPrompt\" type=\"primary\" class=\"button\"\n                   style=\"width: 14%; height: 40px; margin-top: 4em; margin-left: 1em\">edit Prompt</el-button>\n        <el-button @click=\"cancelPromptChange\" type=\"primary\" class=\"button\"\n                   style=\"width: 14%; height: 40px; margin-top: 4em;\"\n                   :disabled=\"!p_edit\">cancel Edit</el-button>\n        <el-button @click=\"savePromptChange\" type=\"primary\" class=\"button\"\n                   style=\"width: 14%; height: 40px; margin-top: 4em; margin-right: 1em\" :disabled=\"!p_edit\">confirm Edit</el-button>\n\n      </div>\n\n      <!-- 获得全部我自己的 prompt 记录-->\n      <el-button type=\"primary\" class=\"button\" @click=\"getMyPrompt\"\n                 style=\"width: 12%; height: 40px; margin-top: 4em; margin-right: 4em\">\n        <i class=\"el-icon-user-solid\"></i>\n        My Prompts</el-button>\n    </div>\n\n\n      <el-button-group class=\"header\">\n        <el-dropdown v-model=\"selectedItem\">\n          <el-button type=\"primary\">\n            {{ selectedItem }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </el-button>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item v-for=\"(item, index) in models\" :key=\"index\" @click.native=\"selectItem(item)\">\n              {{ item }}\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n\n        <el-button @click=\"getWrtingAssistantHelp\" type=\"primary\" style=\"margin-left: 16px; margin-right: 50%\">submit</el-button>\n\n<!--        <el-button type=\"primary\"  class=\"button\" @click=\"startEdit\">edit Output</el-button>-->\n<!--        <el-button type=\"primary\"  class=\"button\" @click=\"saveChange\">confirm Edit</el-button>-->\n<!--        <el-button @click=\"copyText\" type=\"primary\">Copy Output</el-button>-->\n        <!--        <el-button type=\"primary\"  class=\"button\" @click=\"refreshDrawer\">重选</el-button>-->\n\n\n        <el-drawer\n              title=\"Select Proper Prompt\"\n              :visible.sync=\"drawer\"\n              :direction=\"direction\"\n              :size=\"'100%'\">\n            <el-menu>\n              <el-menu-item v-for=\"(item, index) in prompts\" :key=\"index\"\n                            @click.native=\"selectContent_(item.content)\" class=\"drop-item\">\n<!--                {{item.content}}-->\n                <el-input\n                    type=\"textarea\"\n                    :autosize=\"{ minRows: 3, maxRows: 4}\"\n                    :placeholder=\"item.content\"\n                    style=\"width: 95%\"\n                >\n                </el-input>\n              </el-menu-item>\n            </el-menu>\n        </el-drawer>\n\n        <el-drawer\n            title=\"Select Your Prompt\"\n            :visible.sync=\"my_drawer\"\n            :direction=\"direction\"\n            :size=\"'90%'\">\n          <el-menu>\n            <el-menu-item v-for=\"(item, index) in my_prompts\" :key=\"index\"\n                          @click.native=\"mySelectContent_(item.content)\" class=\"drop-item\">\n              <el-input\n                  type=\"textarea\"\n                  :autosize=\"{ minRows: 3, maxRows: 4}\"\n                  :placeholder=\"item.content\"\n                   style=\"width: 95%\"\n                  >\n              </el-input>\n              <el-popconfirm\n                  title=\"这是一段内容确定删除吗？\" @confirm=\"confirmDelete(item.content)\">\n                <i slot=\"reference\" class=\"el-icon-close\"\n                   style=\"padding-top: 1em\" @click.stop>\n                </i>\n              </el-popconfirm>\n            </el-menu-item>\n          </el-menu>\n        </el-drawer>\n\n      </el-button-group>\n\n  <div class=\"translate-container\">\n      <el-row :gutter=0>\n\n        <!--output 部分-->\n          <div class=\"grid-content-post bg-light\" v-loading=\"loading\">\n            <div class=\"fr-view u-clearfix u-hover-feature u-rich-text u-text u-text-1\" data-animation-name=\"\" data-animation-duration=\"0\" data-animation-direction=\"\">\n                  <h3 style=\"text-align: left;\">\n                    <span style=\"font-size: 2.5rem;\">I’ve wasted so much time being depressed, that I’m depressed about wasting time.<br>\n                    </span>\n                  </h3>\n                  <p id=\"isPasted\" style=\"font-size: 1.5rem;\">I can’t imagine how many days I have wasted to being sad and crying and not being able to accomplish the things I need to do. I have responsibilities I have deadlines and none of them seem to matter when I am in these dark episodes. How can you force yourself to do what needs to be done when you feel so hopeless and numb?</p>\n                  <p>\n                    <br><br><br>\n                  </p>\n                </div>\n          </div>\n\n      </el-row>\n      \n    </div>\n\n    <!-- 核心部件-->\n    <div class=\"translate-container\">\n      <el-row :gutter=20>\n        <!--input 部分-->\n        <el-col :span=\"12\">\n          <div class=\"grid-content bg-light\">\n            <label style=\"font-family: Roboto,RobotoDraft,Helvetica,Arial,sans-serif; font-size: large\">Input</label>\n            <p style=\"font-size: small; color: grey;\">Note: Use gpt-3.5-turbo-16k only when the word count exceeds 5000.</p>\n            <textarea id=\"inputArea\" ref=\"markdownEditor\" class=\"textarea\"></textarea>\n          </div>\n        </el-col>\n\n        <!--output 部分-->\n        <el-col :span=\"12\">\n          <div class=\"grid-content bg-light\" v-loading=\"loading\">\n            <div class=\"label_container\" style=\"display: flex\">\n              <label style=\"font-family: Roboto,RobotoDraft,Helvetica,Arial,sans-serif; font-size: large\">Output</label>\n              <el-button @click=\"copyText\" type=\"primary\" style=\"margin-left: 30%; margin-bottom: 2em\">Copy Output</el-button>\n            </div>\n            <textarea id=\"outputArea\" ref=\"markdownEditorOutput\" class=\"textarea\"></textarea>\n          </div>\n\n        </el-col>\n      </el-row>\n      \n    </div>\n    <VueSimpleRangeSlider\n      style=\"width: 300px\"\n      :min=\"0\"\n      :max=\"20\"\n    ></VueSimpleRangeSlider>\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\n\nimport http from \"@/http\";\nimport VueMarkdown from \"vue-markdown\";\nimport EasyMDE from \"easymde\";\nimport \"easymde/dist/easymde.min.css\";\nimport VueSimpleRangeSlider from \"vue-simple-range-slider/vue2\";\nimport \"vue-simple-range-slider/vue2/css\";\n\nexport default {\n  name: \"WritingAssitant\",\n  components:{\n    VueMarkdown,\n    EasyMDE,\n    VueSimpleRangeSlider,\n  },\n  \n\n  mounted() {\n    fetch('/prompt.json').then(response => response.json()).then(data => {\n          this.prompts = data.prompts;\n        }).catch(error => {\n          console.log(error);\n        });\n\n    this.enableEditMode()\n    this.enableOutputEditMode()\n\n  //  检查是否是登录用户\n\n\n  },\n  data(){\n    return {\n      testData: '',\n      edit:false,\n      p_edit: false,\n\n      markdownContent:'',\n      prompts:null,\n      my_prompts: null,\n      drawer: false,\n      my_drawer: false,\n      direction: 'rtl',\n      selectContent: '',\n      beforeEdit: '',\n      inputText: '',\n      outputText: '',\n      // models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k', 'gpt-4'],\n      models:['gpt-3.5-turbo', 'gpt-3.5-turbo-16k'],\n      selectedItem: 'gpt-3.5-turbo',\n\n\n      editMode: true,\n      m_outputText: \"\",\n      markdownEditor: null,\n\n      markdownOutputEditor: null,\n\n      loading: false,\n      value: 20,  \n     \n    }\n  },\n\n  methods:{\n    jumpyTo(url){\n      if(this.$router.currentRoute.path !== url){\n        this.$router.push(url)\n      }\n    },\n\n    messagePop(type, message){\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n\n    enableEditMode(){\n      // this.editMode = true;\n      const vm = this\n      this.$nextTick(() => {\n        if (!this.markdownEditor) {\n          this.markdownEditor = new EasyMDE({\n            element: this.$refs.markdownEditor,\n          });\n\n          //设计样式\n          // const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[0];\n          console.log(\"scoll\")\n          console.log(codemirrorScroll)\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = '400px';\n            codemirrorScroll.style.overflowY = 'auto';\n            console.log(\"successfully set\")\n          }\n\n          this.markdownEditor.codemirror.on(\"change\", () => {\n            vm.inputText = vm.markdownEditor.value();\n            console.log(vm.inputText); // 输出当前的输入值\n          });\n        }\n      });\n    },\n\n    enableOutputEditMode(){\n      const vm = this\n      this.$nextTick(() => {\n        if (!this.markdown) {\n          this.markdownOutputEditor = new EasyMDE({\n            element: this.$refs.markdownEditorOutput,\n          });\n          this.markdownOutputEditor.codemirror.setOption('readOnly', true);\n          //设计样式\n          const codemirrorScroll = document.getElementsByClassName('CodeMirror-scroll')[1];\n          if (codemirrorScroll) {\n            codemirrorScroll.style.maxHeight = '400px';\n            codemirrorScroll.style.overflowY = 'auto';\n            console.log(\"successfully set\")\n          }\n\n          // this.markdownOutputEditor.codemirror.on(\"change\", () => {\n          //   // vm.outputText = vm.markdownOutputEditor.value();\n          //   //每次 vue-diff 的值也会跟着变\n          //   this.$set(this, 'outputText', this.markdownOutputEditor.value());\n          //   console.log(vm.outputText); // 输出当前的输入值\n          // });\n        }\n      });\n    },\n\n\n    copyText(){\n      this.$set(this, 'inputText', this.outputText);\n      // this.inputText = this.outputText\n      // document.getElementById('inputArea').textContent = this.outputText\n      this.markdownEditor.value(this.outputText)\n    },\n    async confirmDelete(content){\n      await http.post('/delete_prompt/',{\n        content: content,\n        person: sessionStorage.getItem('username')\n      }).then(res=>{\n        console.log(\"delete successfully\")\n        this.my_prompts = res.data.prompts\n      }).catch(e=>{\n        console.log(e)\n      })\n    },\n    async savePromptChange(){\n      console.log(\"触发\")\n      this.selectContent = document.getElementById('editPromptBox').textContent\n      document.getElementById('editPromptBox').contentEditable = false\n      this.p_edit = false\n      //  加入到 drawer 自己修改的 prompt 中\n        await this.saveMyPrompt()\n    },\n\n    startEdit(){\n\n      this.edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById('outputArea');\n        output.textContent = this.outputText;\n      });\n\n    },\n    saveChange(){\n      this.outputText = document.getElementById('outputArea').textContent\n      // document.getElementById('outputArea').blur();\n      document.getElementById('outputArea').contentEditable = false\n      this.edit = false\n\n      this.$message({\n        message: 'successfully save changes',\n        type: 'success'\n      });\n    },\n\n    selectItem(content){\n      this.selectedItem = content\n    },\n    selectContent_(content){\n      this.selectContent = content\n      this.beforeEdit = content\n      this.drawer = false\n    },\n\n    editCurPrompt(){\n      this.p_edit = true;\n      this.$nextTick(() => {\n        let output = document.getElementById('editPromptBox');\n        output.textContent = this.selectContent;\n      });\n    },\n\n    cancelPromptChange(){\n      // this.p_edit = false\n      // document.getElementById('editPromptBox').contentEditable = false\n      this.$nextTick(() => {\n        let output = document.getElementById('editPromptBox');\n        this.p_edit = false\n        document.getElementById('editPromptBox').contentEditable = false\n        output.textContent = this.beforeEdit;\n      });\n    },\n\n    mySelectContent_(content){\n      this.selectContent = content\n      console.log(this.selectContent)\n      this.beforeEdit = content\n      this.my_drawer = false\n    },\n\n    async saveMyPrompt(){\n      http.post('/save_prompt/',{\n        content: this.selectContent,\n        person: sessionStorage.getItem('username')\n      }).then(res=>{\n        console.log(\"save prompt res\", res)\n        if (res.data.success){\n          this.messagePop('success', \"save prompt changes successfully!\")\n          console.log(\"save successfully\")\n        }\n        else {\n          this.messagePop('error', 'fail to save prompt changes')\n        }\n      }).catch(e=>{\n        console.log(e)\n        this.messagePop('error', 'fail to save prompt changes')\n      })\n    },\n\n    async getMyPrompt(){\n      this.my_drawer = true\n      http.post('/get_prompt/',{\n        person: sessionStorage.getItem('username')\n      }).then(res=>{\n        console.log(\"get successfully\")\n        this.my_prompts = res.data.prompts\n      }).catch(e=>{\n        console.log(e)\n      })\n    },\n\n    getWrtingAssistantHelp(){\n      this.loading = true\n      let prompt = `[Paragraph]\\n\n                    ${this.inputText}\\n\n                    [TASK]\\n\n                    ${this.selectContent}\\n\n                    [RESULT]\\n\\n`\n      console.log(\"提交的数据是：\", prompt)\n      http.post('/writing_assistant/',{\n        prompt: prompt,\n        model: this.selectedItem,\n      }).then(res=>{\n        this.loading = false\n        this.outputText = res.data.content\n        this.markdownOutputEditor.value(this.outputText)\n        console.log(\"output Text:\", res.data)\n      }).catch(e=>{\n        console.log(e)\n      })\n    },\n\n    refreshDrawer(){\n      this.drawer = true\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n.container{\n  background: white;\n  width: 90%;\n  height: 1200px;\n  margin: auto;\n}\n.header{\n  margin-left: 4em;\n  /*margin-top: 4em;*/\n  padding-top: 4em;\n  display: flex;\n}\n\n.button{\n  /*width: 100px;*/\n  width: 10%;\n}\n\n\n.drop-item{\n  /*width: 500px;*/\n  font-family: ColfaxAI,helvetica,sans-serif;\n  font-size: small;\n  /*white-space: normal;*/\n  /*word-wrap: break-word;*/\n}\n\n.translate-container {\n  padding: 20px;\n}\n\n.grid-content {\n  height: 550px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.grid-content-post {\n  height: 350px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  padding-left: 4em;\n}\n\n.bg-light {\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n\n.textarea {\n  padding-top: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  padding-bottom: 1em;\n  height: 550px;\n\n  /*font-family: 'Arial', sans-serif; !* 这将更改字体 *!*/\n  font-family: 'Roboto', sans-serif;\n  font-size: 16px; /* 这将更改字体大小 */\n  color: #333; /* 这将更改文本颜色 */\n  line-height: 1.5; /* 这将更改行高 */\n  letter-spacing: 0.05em; /* 这将更改字符间距 */\n  text-align: justify; /* 这将使文本两端对齐 */\n  overflow-y: scroll;\n}\n\n\n.el-icon-arrow-down {\n  font-size: 12px;\n}\n\n.el-menu-item i {\n  float: right;\n  margin-top: 5px;\n  cursor: pointer;\n}\n\n.example {\n  background: #ffffff;\n  margin: 20px;\n  border-color: #e7e7e7;\n  padding: 40px;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}