{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport http from \"@/http\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: ''\n        // password: '',\n      }\n    };\n  },\n\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const prolificPID = urlParams.get('PROLIFIC_PID');\n\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n      if (prolificPID) {\n        this.form.username = prolificPID;\n      }\n    },\n    login() {\n      // Handle login logic here\n      // console.log(this.form);\n      http.post('/login/', {\n        name: this.form.username,\n        pwd: this.form.password\n      }).then(res => {\n        console.log('successfully login');\n        console.log(res);\n        sessionStorage.setItem('username', this.form.username);\n        this.messagePop('success', \"successfully login!!\");\n        this.jumpyTo(\"/writing_assistant\");\n        //  同时也可以在后端为 single_fileupload 创建一个文件夹\n        //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n      }).catch(e => {\n        console.log(\"login\", e);\n        this.messagePop('error', \"login error, wrong username or password\");\n      });\n    },\n    signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      http.post('/signup/', {\n        name: this.form.username\n        // pwd: this.form.password,\n      }).then(res => {\n        console.log('successfully sign up');\n        console.log(res);\n        if (res.data.success) {\n          this.messagePop('success', 'successfully sign up');\n        } else {\n          this.messagePop('error', \"please try another username\");\n        }\n      }).catch(e => {\n        console.log(\"sign up error\", e);\n        this.messagePop('error', \"please try another username\");\n      });\n    }\n  },\n  beforeMount() {\n    this.fetchID();\n  }\n};","map":{"version":3,"names":["http","name","data","form","username","methods","messagePop","type","message","$message","jumpyTo","url","$router","currentRoute","path","push","fetchID","urlParams","URLSearchParams","window","location","search","prolificPID","get","login","post","pwd","password","then","res","console","log","sessionStorage","setItem","catch","e","signUp","success","beforeMount"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n<!--        <span>Login</span>-->\n        <img src=\"/imgs/ai4sg_logo.png\" alt=\"Logo\" class=\"logo\">\n      </div>\n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Prolific ID\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <!-- <el-form-item label=\"Password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item> -->\n        <div class=\"button\">\n          <el-button type=\"primary\" @click=\"signUp\">Login</el-button>\n        </div>\n        <!-- <el-button type=\"primary\" @click=\"signUp\">Sign Up</el-button> -->\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport http from \"@/http\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: '',\n        // password: '',\n      }\n    };\n  },\n  methods: {\n    messagePop(type, message){\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url){\n      if(this.$router.currentRoute.path !== url){\n        this.$router.push(url)\n      }\n    },\n    fetchID() {\n      // Get the value of the 'PROLIFIC_PID' parameter from the current URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const prolificPID = urlParams.get('PROLIFIC_PID');\n\n      // Update the 'username' variable with the value of 'PROLIFIC_PID'\n      if (prolificPID) {\n        this.form.username = prolificPID;\n      }\n    },\n    login() {\n      // Handle login logic here\n      // console.log(this.form);\n      http.post('/login/',{\n        name: this.form.username,\n        pwd: this.form.password,\n      }).then(res => {\n        console.log('successfully login')\n        console.log(res)\n        sessionStorage.setItem('username', this.form.username)\n        this.messagePop('success', \"successfully login!!\")\n        this.jumpyTo(\"/writing_assistant\")\n      //  同时也可以在后端为 single_fileupload 创建一个文件夹\n      //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n      }).catch(e=>{\n        console.log(\"login\", e)\n        this.messagePop('error', \"login error, wrong username or password\")\n      })\n    },\n\n\n    signUp(){\n      console.log(this.form)\n      console.log(this.form.username)\n      http.post('/signup/',{\n        name: this.form.username,\n        // pwd: this.form.password,\n      }).then(res => {\n        console.log('successfully sign up')\n        console.log(res)\n        if(res.data.success){\n          this.messagePop('success', 'successfully sign up',)\n        }else {\n          this.messagePop('error', \"please try another username\")\n        }\n      }).catch(e=>{\n        console.log(\"sign up error\", e)\n        this.messagePop('error', \"please try another username\")\n      })\n    }\n  },\n  beforeMount() {\n   this.fetchID()\n},\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.box-card {\n  width: 30%;\n}\n\n.logo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n}\n\n.button{\n  display: block;\n  margin-left: auto;\n  /* margin-right: auto; */\n  width: 20%;\n}\n</style>"],"mappings":";;;;AAwBA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACA;MACA;IACA;EACA;;EACAC,OAAA;IACAC,WAAAC,IAAA,EAAAC,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,KAAAA,OAAA;QACAD,IAAA,KAAAA,IAAA;MACA;IACA;IACAG,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA,KAAAH,GAAA;QACA,KAAAC,OAAA,CAAAG,IAAA,CAAAJ,GAAA;MACA;IACA;IACAK,QAAA;MACA;MACA,MAAAC,SAAA,OAAAC,eAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA,MAAAC,WAAA,GAAAL,SAAA,CAAAM,GAAA;;MAEA;MACA,IAAAD,WAAA;QACA,KAAAnB,IAAA,CAAAC,QAAA,GAAAkB,WAAA;MACA;IACA;IACAE,MAAA;MACA;MACA;MACAxB,IAAA,CAAAyB,IAAA;QACAxB,IAAA,OAAAE,IAAA,CAAAC,QAAA;QACAsB,GAAA,OAAAvB,IAAA,CAAAwB;MACA,GAAAC,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACAG,cAAA,CAAAC,OAAA,kBAAA9B,IAAA,CAAAC,QAAA;QACA,KAAAE,UAAA;QACA,KAAAI,OAAA;QACA;QACA;MAEA,GAAAwB,KAAA,CAAAC,CAAA;QACAL,OAAA,CAAAC,GAAA,UAAAI,CAAA;QACA,KAAA7B,UAAA;MACA;IACA;IAGA8B,OAAA;MACAN,OAAA,CAAAC,GAAA,MAAA5B,IAAA;MACA2B,OAAA,CAAAC,GAAA,MAAA5B,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAyB,IAAA;QACAxB,IAAA,OAAAE,IAAA,CAAAC;QACA;MACA,GAAAwB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAA3B,IAAA,CAAAmC,OAAA;UACA,KAAA/B,UAAA;QACA;UACA,KAAAA,UAAA;QACA;MACA,GAAA4B,KAAA,CAAAC,CAAA;QACAL,OAAA,CAAAC,GAAA,kBAAAI,CAAA;QACA,KAAA7B,UAAA;MACA;IACA;EACA;EACAgC,YAAA;IACA,KAAAtB,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}