{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/http\";\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    messagePop(type, message) {\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url) {\n      if (this.$router.currentRoute.path !== url) {\n        this.$router.push(url);\n      }\n    },\n    login() {\n      // Handle login logic here\n      // console.log(this.form);\n      http.post('/login/', {\n        name: this.form.username,\n        pwd: this.form.password\n      }).then(res => {\n        console.log('successfully login');\n        console.log(res);\n        sessionStorage.setItem('username', this.form.username);\n        this.messagePop('success', \"successfully login!!\");\n        this.jumpyTo(\"/writing_assistant\");\n        //  同时也可以在后端为 single_fileupload 创建一个文件夹\n        //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n      }).catch(e => {\n        console.log(\"login\", e);\n        this.messagePop('error', \"login error, wrong username or password\");\n      });\n    },\n    signUp() {\n      console.log(this.form);\n      console.log(this.form.username);\n      http.post('/signup/', {\n        name: this.form.username,\n        pwd: this.form.password\n      }).then(res => {\n        console.log('successfully sign up');\n        console.log(res);\n        if (res.data.success) {\n          this.messagePop('success', 'successfully sign up');\n        } else {\n          this.messagePop('error', \"please try another username\");\n        }\n      }).catch(e => {\n        console.log(\"sign up error\", e);\n        this.messagePop('error', \"please try another username\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","form","username","password","methods","messagePop","type","message","$message","jumpyTo","url","$router","currentRoute","path","push","login","post","pwd","then","res","console","log","sessionStorage","setItem","catch","e","signUp","success"],"sources":["src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n<!--        <span>Login</span>-->\n        <img src=\"/imgs/ai4sg_logo.png\" alt=\"Logo\" class=\"logo\">\n      </div>\n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-button type=\"primary\" @click=\"login\">Login</el-button>\n        <el-button type=\"primary\" @click=\"signUp\">Sign Up</el-button>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport http from \"@/http\";\n\nexport default {\n  name: \"LoginPage\",\n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n      }\n    };\n  },\n  methods: {\n    messagePop(type, message){\n      this.$message({\n        message: `${message}`,\n        type: `${type}`\n      });\n    },\n    jumpyTo(url){\n      if(this.$router.currentRoute.path !== url){\n        this.$router.push(url)\n      }\n    },\n\n    login() {\n      // Handle login logic here\n      // console.log(this.form);\n      http.post('/login/',{\n        name: this.form.username,\n        pwd: this.form.password,\n      }).then(res => {\n        console.log('successfully login')\n        console.log(res)\n        sessionStorage.setItem('username', this.form.username)\n        this.messagePop('success', \"successfully login!!\")\n        this.jumpyTo(\"/writing_assistant\")\n      //  同时也可以在后端为 single_fileupload 创建一个文件夹\n      //  后面还可以再后端为 multiple_fileupload 创建一个文件夹\n\n      }).catch(e=>{\n        console.log(\"login\", e)\n        this.messagePop('error', \"login error, wrong username or password\")\n      })\n    },\n\n\n    signUp(){\n      console.log(this.form)\n      console.log(this.form.username)\n      http.post('/signup/',{\n        name: this.form.username,\n        pwd: this.form.password,\n      }).then(res => {\n        console.log('successfully sign up')\n        console.log(res)\n        if(res.data.success){\n          this.messagePop('success', 'successfully sign up',)\n        }else {\n          this.messagePop('error', \"please try another username\")\n        }\n      }).catch(e=>{\n        console.log(\"sign up error\", e)\n        this.messagePop('error', \"please try another username\")\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n.box-card {\n  width: 30%;\n}\n\n.logo {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 20%;\n}\n</style>"],"mappings":";AAsBA,OAAAA,IAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA,EAAAC,OAAA;MACA,KAAAC,QAAA;QACAD,OAAA,KAAAA,OAAA;QACAD,IAAA,KAAAA,IAAA;MACA;IACA;IACAG,QAAAC,GAAA;MACA,SAAAC,OAAA,CAAAC,YAAA,CAAAC,IAAA,KAAAH,GAAA;QACA,KAAAC,OAAA,CAAAG,IAAA,CAAAJ,GAAA;MACA;IACA;IAEAK,MAAA;MACA;MACA;MACAjB,IAAA,CAAAkB,IAAA;QACAjB,IAAA,OAAAE,IAAA,CAAAC,QAAA;QACAe,GAAA,OAAAhB,IAAA,CAAAE;MACA,GAAAe,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACAG,cAAA,CAAAC,OAAA,kBAAAtB,IAAA,CAAAC,QAAA;QACA,KAAAG,UAAA;QACA,KAAAI,OAAA;QACA;QACA;MAEA,GAAAe,KAAA,CAAAC,CAAA;QACAL,OAAA,CAAAC,GAAA,UAAAI,CAAA;QACA,KAAApB,UAAA;MACA;IACA;IAGAqB,OAAA;MACAN,OAAA,CAAAC,GAAA,MAAApB,IAAA;MACAmB,OAAA,CAAAC,GAAA,MAAApB,IAAA,CAAAC,QAAA;MACAJ,IAAA,CAAAkB,IAAA;QACAjB,IAAA,OAAAE,IAAA,CAAAC,QAAA;QACAe,GAAA,OAAAhB,IAAA,CAAAE;MACA,GAAAe,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,IAAAA,GAAA,CAAAnB,IAAA,CAAA2B,OAAA;UACA,KAAAtB,UAAA;QACA;UACA,KAAAA,UAAA;QACA;MACA,GAAAmB,KAAA,CAAAC,CAAA;QACAL,OAAA,CAAAC,GAAA,kBAAAI,CAAA;QACA,KAAApB,UAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}