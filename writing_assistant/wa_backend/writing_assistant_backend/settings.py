"""
Django settings for writing_assistant_backend project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import dj_database_url

sentry_sdk.init(
dsn="https://092759abdd393c3ac607be5e0de49451@o4504962180448256.ingest.sentry.io/4505748536557568",
integrations=[DjangoIntegration()],
# If you wish to associate users to errors (assuming you are using
# django.contrib.auth) you may enable sending PII data.
send_default_pii=True,
# Set traces_sample_rate to 1.0 to capture 100%
# of transactions for performance monitoring.
# We recommend adjusting this value in production.
traces_sample_rate=1.0,
# To set a uniform sample rate
# Set profiles_sample_rate to 1.0 to profile 100%
# of sampled transactions.
# We recommend adjusting this value in production,
profiles_sample_rate=1.0,
)


BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-abv8hsca!)yxh8$pcox+22@!)nsj%s&3^-%)k3)_0jm77b(wds'

IS_HEROKU_APP = "DYNO" in os.environ and not "CI" in os.environ     # deploy addition

# SECURITY WARNING: don't run with debug turned on in production!
if not IS_HEROKU_APP:                   # deploy addition
    DEBUG = True



if IS_HEROKU_APP:                       # deploy addition
    ALLOWED_HOSTS = ["*"]               # deploy addition
else:                                   # deploy addition
    ALLOWED_HOSTS = ['*']                  # deploy addition


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    # 'sslserver',
    "whitenoise.runserver_nostatic",  # deploy addition
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'writing_assistant_backend',
    # 'dapne',
    # 'channels'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True
ROOT_URLCONF = 'writing_assistant_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'writing_assistant_backend.wsgi.application'

SECURE_SSL_REDIRECT = False

# CORS_ORIGIN_ALLOW_ALL = False
# CORS_ORIGIN_WHITELIST = (
#   'http://localhost:8080','https://authentic-web-3d6151afddff.herokuapp.com'
# )
# CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOWED_ORIGINS = ['http://localhost:8080','https://authentic-web-3d6151afddff.herokuapp.com']
# CSRF_TRUSTED_ORIGINS = ['http://localhost:8080','https://authentic-web-3d6151afddff.herokuapp.com']
# CORS_ALLOW_METHODS = [
#     "DELETE",
#     "GET",
#     "OPTIONS",
#     "PATCH",
#     "POST",
#     "PUT",
# ]
# CORS_ALLOW_HEADERS = [
#     "*"
# ]
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
"""================================== deploy addition =================================="""
# if IS_HEROKU_APP:
#     # In production on Heroku the database configuration is derived from the `DATABASE_URL`
#     # environment variable by the dj-database-url package. `DATABASE_URL` will be set
#     # automatically by Heroku when a database addon is attached to your Heroku app. See:
#     # https://devcenter.heroku.com/articles/provisioning-heroku-postgres
#     # https://github.com/jazzband/dj-database-url
#     DATABASES = {
#         "default": dj_database_url.config(
#             default='postgres://user:password@localhost/database',
#             conn_max_age=600,
#             conn_health_checks=True,
#             ssl_require=True,
#         ),
#     }
# else:
#     # When running locally in development or in CI, a sqlite database file will be used instead
#     # to simplify initial setup. Longer term it's recommended to use Postgres locally too.
#     DATABASES = {
#         "default": {
#             "ENGINE": "django.db.backends.sqlite3",
#             "NAME": BASE_DIR / "db.sqlite3",
#         }
#     }

"""================================== deploy addition =================================="""

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

"""================================== deploy addition =================================="""
STORAGES = {
    # Enable WhiteNoise's GZip and Brotli compression of static assets:
    # https://whitenoise.readthedocs.io/en/latest/django.html#add-compression-and-caching-support
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}
"""================================== deploy addition =================================="""
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ASGI_APPLICATION = 'writing_assistant_backend.routing.applicaiton'
